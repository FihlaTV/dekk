[
  {
    "__docId__": 1,
    "kind": "external",
    "name": "Infinity",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Infinity",
    "memberof": "@dekk/.external-ecmascript.js",
    "static": true,
    "longname": "@dekk/.external-ecmascript.js~Infinity",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 2,
    "kind": "external",
    "name": "NaN",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NaN",
    "memberof": "@dekk/.external-ecmascript.js",
    "static": true,
    "longname": "@dekk/.external-ecmascript.js~NaN",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 3,
    "kind": "external",
    "name": "undefined",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined",
    "memberof": "@dekk/.external-ecmascript.js",
    "static": true,
    "longname": "@dekk/.external-ecmascript.js~undefined",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 4,
    "kind": "external",
    "name": "null",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/null",
    "memberof": "@dekk/.external-ecmascript.js",
    "static": true,
    "longname": "@dekk/.external-ecmascript.js~null",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 5,
    "kind": "external",
    "name": "Object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "@dekk/.external-ecmascript.js",
    "static": true,
    "longname": "@dekk/.external-ecmascript.js~Object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 6,
    "kind": "external",
    "name": "object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "@dekk/.external-ecmascript.js",
    "static": true,
    "longname": "@dekk/.external-ecmascript.js~object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 7,
    "kind": "external",
    "name": "Function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "@dekk/.external-ecmascript.js",
    "static": true,
    "longname": "@dekk/.external-ecmascript.js~Function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 8,
    "kind": "external",
    "name": "function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "@dekk/.external-ecmascript.js",
    "static": true,
    "longname": "@dekk/.external-ecmascript.js~function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 9,
    "kind": "external",
    "name": "Boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "@dekk/.external-ecmascript.js",
    "static": true,
    "longname": "@dekk/.external-ecmascript.js~Boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 10,
    "kind": "external",
    "name": "boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "@dekk/.external-ecmascript.js",
    "static": true,
    "longname": "@dekk/.external-ecmascript.js~boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 11,
    "kind": "external",
    "name": "Symbol",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol",
    "memberof": "@dekk/.external-ecmascript.js",
    "static": true,
    "longname": "@dekk/.external-ecmascript.js~Symbol",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 12,
    "kind": "external",
    "name": "Error",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error",
    "memberof": "@dekk/.external-ecmascript.js",
    "static": true,
    "longname": "@dekk/.external-ecmascript.js~Error",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 13,
    "kind": "external",
    "name": "EvalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/EvalError",
    "memberof": "@dekk/.external-ecmascript.js",
    "static": true,
    "longname": "@dekk/.external-ecmascript.js~EvalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 14,
    "kind": "external",
    "name": "InternalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/InternalError",
    "memberof": "@dekk/.external-ecmascript.js",
    "static": true,
    "longname": "@dekk/.external-ecmascript.js~InternalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 15,
    "kind": "external",
    "name": "RangeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RangeError",
    "memberof": "@dekk/.external-ecmascript.js",
    "static": true,
    "longname": "@dekk/.external-ecmascript.js~RangeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 16,
    "kind": "external",
    "name": "ReferenceError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ReferenceError",
    "memberof": "@dekk/.external-ecmascript.js",
    "static": true,
    "longname": "@dekk/.external-ecmascript.js~ReferenceError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 17,
    "kind": "external",
    "name": "SyntaxError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError",
    "memberof": "@dekk/.external-ecmascript.js",
    "static": true,
    "longname": "@dekk/.external-ecmascript.js~SyntaxError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 18,
    "kind": "external",
    "name": "TypeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError",
    "memberof": "@dekk/.external-ecmascript.js",
    "static": true,
    "longname": "@dekk/.external-ecmascript.js~TypeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 19,
    "kind": "external",
    "name": "URIError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/URIError",
    "memberof": "@dekk/.external-ecmascript.js",
    "static": true,
    "longname": "@dekk/.external-ecmascript.js~URIError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 20,
    "kind": "external",
    "name": "Number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "@dekk/.external-ecmascript.js",
    "static": true,
    "longname": "@dekk/.external-ecmascript.js~Number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 21,
    "kind": "external",
    "name": "number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "@dekk/.external-ecmascript.js",
    "static": true,
    "longname": "@dekk/.external-ecmascript.js~number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 22,
    "kind": "external",
    "name": "Date",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date",
    "memberof": "@dekk/.external-ecmascript.js",
    "static": true,
    "longname": "@dekk/.external-ecmascript.js~Date",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 23,
    "kind": "external",
    "name": "String",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "@dekk/.external-ecmascript.js",
    "static": true,
    "longname": "@dekk/.external-ecmascript.js~String",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 24,
    "kind": "external",
    "name": "string",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "@dekk/.external-ecmascript.js",
    "static": true,
    "longname": "@dekk/.external-ecmascript.js~string",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 25,
    "kind": "external",
    "name": "RegExp",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp",
    "memberof": "@dekk/.external-ecmascript.js",
    "static": true,
    "longname": "@dekk/.external-ecmascript.js~RegExp",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 26,
    "kind": "external",
    "name": "Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array",
    "memberof": "@dekk/.external-ecmascript.js",
    "static": true,
    "longname": "@dekk/.external-ecmascript.js~Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 27,
    "kind": "external",
    "name": "Int8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int8Array",
    "memberof": "@dekk/.external-ecmascript.js",
    "static": true,
    "longname": "@dekk/.external-ecmascript.js~Int8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 28,
    "kind": "external",
    "name": "Uint8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array",
    "memberof": "@dekk/.external-ecmascript.js",
    "static": true,
    "longname": "@dekk/.external-ecmascript.js~Uint8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 29,
    "kind": "external",
    "name": "Uint8ClampedArray",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray",
    "memberof": "@dekk/.external-ecmascript.js",
    "static": true,
    "longname": "@dekk/.external-ecmascript.js~Uint8ClampedArray",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 30,
    "kind": "external",
    "name": "Int16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int16Array",
    "memberof": "@dekk/.external-ecmascript.js",
    "static": true,
    "longname": "@dekk/.external-ecmascript.js~Int16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 31,
    "kind": "external",
    "name": "Uint16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint16Array",
    "memberof": "@dekk/.external-ecmascript.js",
    "static": true,
    "longname": "@dekk/.external-ecmascript.js~Uint16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 32,
    "kind": "external",
    "name": "Int32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int32Array",
    "memberof": "@dekk/.external-ecmascript.js",
    "static": true,
    "longname": "@dekk/.external-ecmascript.js~Int32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 33,
    "kind": "external",
    "name": "Uint32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint32Array",
    "memberof": "@dekk/.external-ecmascript.js",
    "static": true,
    "longname": "@dekk/.external-ecmascript.js~Uint32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 34,
    "kind": "external",
    "name": "Float32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float32Array",
    "memberof": "@dekk/.external-ecmascript.js",
    "static": true,
    "longname": "@dekk/.external-ecmascript.js~Float32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 35,
    "kind": "external",
    "name": "Float64Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float64Array",
    "memberof": "@dekk/.external-ecmascript.js",
    "static": true,
    "longname": "@dekk/.external-ecmascript.js~Float64Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 36,
    "kind": "external",
    "name": "Map",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map",
    "memberof": "@dekk/.external-ecmascript.js",
    "static": true,
    "longname": "@dekk/.external-ecmascript.js~Map",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 37,
    "kind": "external",
    "name": "Set",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set",
    "memberof": "@dekk/.external-ecmascript.js",
    "static": true,
    "longname": "@dekk/.external-ecmascript.js~Set",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 38,
    "kind": "external",
    "name": "WeakMap",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap",
    "memberof": "@dekk/.external-ecmascript.js",
    "static": true,
    "longname": "@dekk/.external-ecmascript.js~WeakMap",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 39,
    "kind": "external",
    "name": "WeakSet",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakSet",
    "memberof": "@dekk/.external-ecmascript.js",
    "static": true,
    "longname": "@dekk/.external-ecmascript.js~WeakSet",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 40,
    "kind": "external",
    "name": "ArrayBuffer",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer",
    "memberof": "@dekk/.external-ecmascript.js",
    "static": true,
    "longname": "@dekk/.external-ecmascript.js~ArrayBuffer",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 41,
    "kind": "external",
    "name": "DataView",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView",
    "memberof": "@dekk/.external-ecmascript.js",
    "static": true,
    "longname": "@dekk/.external-ecmascript.js~DataView",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 42,
    "kind": "external",
    "name": "JSON",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON",
    "memberof": "@dekk/.external-ecmascript.js",
    "static": true,
    "longname": "@dekk/.external-ecmascript.js~JSON",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 43,
    "kind": "external",
    "name": "Promise",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",
    "memberof": "@dekk/.external-ecmascript.js",
    "static": true,
    "longname": "@dekk/.external-ecmascript.js~Promise",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 44,
    "kind": "external",
    "name": "Generator",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator",
    "memberof": "@dekk/.external-ecmascript.js",
    "static": true,
    "longname": "@dekk/.external-ecmascript.js~Generator",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 45,
    "kind": "external",
    "name": "GeneratorFunction",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/GeneratorFunction",
    "memberof": "@dekk/.external-ecmascript.js",
    "static": true,
    "longname": "@dekk/.external-ecmascript.js~GeneratorFunction",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 46,
    "kind": "external",
    "name": "Reflect",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect",
    "memberof": "@dekk/.external-ecmascript.js",
    "static": true,
    "longname": "@dekk/.external-ecmascript.js~Reflect",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 47,
    "kind": "external",
    "name": "Proxy",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy",
    "memberof": "@dekk/.external-ecmascript.js",
    "static": true,
    "longname": "@dekk/.external-ecmascript.js~Proxy",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 48,
    "kind": "file",
    "name": "@dekk/deck/src/elements.js",
    "content": "import PropTypes from 'prop-types'\n\n/**\n * It allows adding global/static elements to Dekk.\n * Elements render content and are usually pure functions or stateless\n * components.\n *\n * @public\n * @param {Object} props\n *   The properties\n * @param {(ReactElement|ReactElement[])} props.children\n *   One or more elements\n * @example\n * import Deck, {Elements} from '@dekk/deck'\n *\n * const Header = () => <header>Hello Dekk!</header>\n * export default (\n *   <Deck>\n *     <Elements>\n *       <Header/>\n *     </Elements>\n *   </Deck>\n * )\n */\nconst Elements = props => null\n\n/**\n * @private\n */\nElements.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.element,\n    PropTypes.arrayOf(PropTypes.element)\n  ])\n}\n\nexport default Elements\n",
    "static": true,
    "longname": "/Users/greada/Documents/workspace/s2/dekk/@dekk/deck/src/elements.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 49,
    "kind": "function",
    "name": "Elements",
    "memberof": "@dekk/deck/src/elements.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "@dekk/deck/src/elements.js~Elements",
    "access": "public",
    "export": true,
    "importPath": "@dekk/deck",
    "importStyle": "Elements",
    "description": "It allows adding global/static elements to Dekk.\nElements render content and are usually pure functions or stateless\ncomponents.",
    "examples": [
      "import Deck, {Elements} from '@dekk/deck'\n\nconst Header = () => <header>Hello Dekk!</header>\nexport default (\n  <Deck>\n    <Elements>\n      <Header/>\n    </Elements>\n  </Deck>\n)"
    ],
    "lineNumber": 25,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "props",
        "description": "The properties"
      },
      {
        "nullable": null,
        "types": [
          "ReactElement",
          "ReactElement[]"
        ],
        "spread": false,
        "optional": false,
        "name": "props.children",
        "description": "One or more elements"
      }
    ],
    "return": null
  },
  {
    "__docId__": 50,
    "kind": "file",
    "name": "@dekk/deck/src/index.js",
    "content": "import React, {Component, Children, cloneElement} from 'react'\nimport PropTypes from 'prop-types'\nimport {observer} from 'mobx-react'\nimport {range} from '@dekk/utils'\nimport Store from '@dekk/store'\nimport Slide from '@dekk/slide'\nimport Wrapper from './wrapper'\nimport SlidesWrapper from './slides-wrapper'\nimport Plugins from './plugins'\nimport Elements from './elements'\n\nexport {Plugins, Elements}\n\n/**\n * A wrapper around the slides. It includes a paging component to allow\n * navigating the slides and fragments.\n *\n * `<Deck/>` renders 3 slides (previous, current, next) to allow various\n * transitions.\n *\n * The internal store is handled by mobX. {@link https://github.com/mobxjs/}\n *\n * @class Deck\n * @reactProps {Object} props\n *   The properties\n * @reactProps {(Slide|Slide[])} props.children\n * @reactProps {?String} props.mixin\n * @reactProps {?Boolean} props.slave\n *\n * @example\n * import React from 'react'\n * import Deck from '@dekk/deck'\n * import Slide from '@dekk/slide'\n *\n * const appStyles = `\n *  background: #000;\n *  color: #fff;\n * `\n * const App = ({slave}) => (\n *   <Dekk mixin={appStyles}>\n *     <Slide>1</Slide>\n *     <Slide>2</Slide>\n *     <Slide>3</Slide>\n *   </Dekk>\n * )\n */\n@observer\nexport default class Deck extends Component {\n  /**\n   * Store.\n   * It handles paging and fragmentOrder navigation\n   * @private\n   */\n  store = new Store({\n    slideIndex: 0\n  })\n\n  /**\n   * @private\n   * @return {{children: (Slide|Slide[]), mixin: ?String, slave: ?Boolean}}\n   *   Allowed propTypes for `<Deck/>`\n   */\n  static get propTypes() {\n    return {\n      children: PropTypes.node.isRequired,\n      mixin: PropTypes.oneOfType([PropTypes.array, PropTypes.string])\n    }\n  }\n\n  /**\n   * Sends context to decendants.\n   * Includes the app store to allow all deck components to access the store\n   * without having to include its own logic.\n   * @private\n   * @return {{store: Object, fragmentHost: number}}\n   *   The `store` and the `fragmentHost`\n   */\n  static get childContextTypes() {\n    return {\n      store: PropTypes.object.isRequired,\n      fragmentHost: PropTypes.number\n    }\n  }\n\n  /**\n   * Constructor\n   * @public\n   * @param {Object} props\n   *   The properties\n   * @param {(Slide|Slide[]|Plugins|Plugins[])} props.children\n   * @param {?String} props.mixin\n   * @param {?Boolean} props.slave\n   */\n  constructor(props) {\n    super(props)\n  }\n\n  /**\n   * @private\n   * @return {{store: store}}\n   *   The child context.\n   */\n  getChildContext() {\n    return {\n      store: this.store\n    }\n  }\n\n  /**\n   * @private\n   */\n  componentWillMount() {\n    this.buildFragmentHosts()\n  }\n\n  /**\n   * @private\n   */\n  componentWillReceiveProps(newProps) {\n    // Rebuild fragmentHost when children change\n    // this will prevent undefined hosts while reducing the number\n    // of calls\n    if (newProps.children !== this.props.children) {\n      this.buildFragmentHosts()\n    }\n  }\n\n  /**\n   * @private\n   */\n  buildFragmentHosts() {\n    this.slides.forEach((child, index) => {\n      this.store.fragmentHosts[index] = this.store.fragmentHosts[index] || []\n    })\n  }\n\n  /**\n   * @private\n   */\n  get plugins() {\n    const {slideIndex, fragmentIndex, fragmentOrder} = this.store\n    const {length: slideCount} = this.slides\n    const {length: fragmentCount} = this.store.fragmentHosts[slideIndex]\n\n    return Children.toArray(this.props.children)\n      .filter(child => child.type === Plugins)\n      .reduce((a, b) => a.concat(b.props.children), [])\n      .map((plugin, index) =>\n        cloneElement(plugin, {\n          key: `${plugin.type.name}_${index}`,\n          ...this.store.publicMethods,\n          slideIndex,\n          slideCount,\n          fragmentIndex,\n          fragmentCount,\n          fragmentOrder\n        })\n      )\n  }\n\n  /**\n   * @private\n   */\n  get elements() {\n    const {slideIndex, fragmentIndex, fragmentOrder} = this.store\n    const {length: slideCount} = this.slides\n    const {length: fragmentCount} = this.store.fragmentHosts[slideIndex]\n    return Children.toArray(this.props.children)\n      .filter(child => child.type === Elements)\n      .reduce((a, b) => a.concat(b.props.children), [])\n      .map((element, index) =>\n        cloneElement(element, {\n          key: `${element.type.name}_${index}`,\n          ...this.store.publicMethods,\n          slideIndex,\n          slideCount,\n          fragmentIndex,\n          fragmentCount,\n          fragmentOrder\n        })\n      )\n  }\n\n  /**\n   * @private\n   */\n  get slots() {\n    return [Plugins, Elements]\n  }\n\n  /**\n   * @private\n   */\n  get slides() {\n    return Children.toArray(this.props.children).filter(\n      child => !this.slots.includes(child.type)\n    )\n  }\n\n  /**\n   * Get the `children` by a range of `+-1` around the current slide.\n   * It renders a maximum of 3 slides (previous, current, next)\n   * This allows various transitions between slides.\n   *\n   * @private\n   * @return {Array<Slide>} returns an array of max 3 slides\n   */\n  get visibleSlides() {\n    const {children} = this.props\n    const {slideIndex, direction, fragmentOrder, fragmentHosts} = this.store\n    return (\n      this.slides\n        // Assign the original index for the Component\n        .map((child, originalIndex) => ({child, originalIndex}))\n        // Filter by a range of `+-1`\n        // Filter first to reduce the number of clones\n        .filter((c, i) => range(i, slideIndex + 1, slideIndex - 1))\n        // Modify the remaining slides (maximum of 3)\n        .map(({child, originalIndex}) => {\n          const {length: fragmentCount = 0} = this.store.fragmentHosts[\n            originalIndex\n          ]\n          const lastFragment = Math.max(0, fragmentCount - 1)\n          // Flags to check for value\n          const isCurrent = slideIndex === originalIndex\n          const isPrev = slideIndex === originalIndex + 1\n          const isNext = slideIndex === originalIndex - 1\n          // Flags to check for directional movement\n          // Slides could obviously move anywhere but this is something\n          // we all understand\n          const movesRight = direction === 1\n          const movesLeft = direction === -1\n\n          // Clone the element to add the logic\n          return cloneElement(child, {\n            direction,\n            isPrev,\n            isNext,\n            isCurrent,\n            key: `slide_${originalIndex}`,\n            fragmentOrder: isCurrent\n              ? fragmentOrder\n              : isPrev ? lastFragment : 0,\n            slideIndex: originalIndex,\n            fromPrev: isCurrent && movesLeft,\n            fromNext: isCurrent && movesRight,\n            toPrev: isPrev && movesRight,\n            toNext: isNext && movesLeft\n          })\n        })\n    )\n  }\n\n  /**\n   * @private\n   * @return {Wrapper}\n   *   The entire Deck including paging logic inside a Wrapper\n   */\n  render() {\n    return (\n      <Wrapper mixin={this.props.mixin}>\n        {this.plugins}\n        {this.elements}\n        <SlidesWrapper>{this.visibleSlides}</SlidesWrapper>\n      </Wrapper>\n    )\n  }\n}\n",
    "static": true,
    "longname": "/Users/greada/Documents/workspace/s2/dekk/@dekk/deck/src/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 51,
    "kind": "class",
    "name": "Deck",
    "memberof": "@dekk/deck/src/index.js",
    "static": true,
    "longname": "@dekk/deck/src/index.js~Deck",
    "access": "public",
    "export": true,
    "importPath": "@dekk/deck",
    "importStyle": "Deck",
    "description": "A wrapper around the slides. It includes a paging component to allow\nnavigating the slides and fragments.\n\n`<Deck/>` renders 3 slides (previous, current, next) to allow various\ntransitions.\n\nThe internal store is handled by mobX. {@link https://github.com/mobxjs/}",
    "examples": [
      "import React from 'react'\nimport Deck from '@dekk/deck'\nimport Slide from '@dekk/slide'\n\nconst appStyles = `\n background: #000;\n color: #fff;\n`\nconst App = ({slave}) => (\n  <Dekk mixin={appStyles}>\n    <Slide>1</Slide>\n    <Slide>2</Slide>\n    <Slide>3</Slide>\n  </Dekk>\n)"
    ],
    "lineNumber": 48,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "Deck"
      },
      {
        "tagName": "@reactProps",
        "tagValue": "{Object} props\n  The properties"
      },
      {
        "tagName": "@reactProps",
        "tagValue": "{(Slide|Slide[])} props.children"
      },
      {
        "tagName": "@reactProps",
        "tagValue": "{?String} props.mixin"
      },
      {
        "tagName": "@reactProps",
        "tagValue": "{?Boolean} props.slave"
      }
    ],
    "decorators": [
      {
        "name": "observer",
        "arguments": null
      }
    ],
    "interface": false,
    "extends": [
      "react~Component"
    ]
  },
  {
    "__docId__": 52,
    "kind": "member",
    "name": "store",
    "memberof": "@dekk/deck/src/index.js~Deck",
    "static": false,
    "longname": "@dekk/deck/src/index.js~Deck#store",
    "access": "private",
    "description": "Store.\nIt handles paging and fragmentOrder navigation",
    "lineNumber": 54,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 53,
    "kind": "get",
    "name": "propTypes",
    "memberof": "@dekk/deck/src/index.js~Deck",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "@dekk/deck/src/index.js~Deck.propTypes",
    "access": "private",
    "description": "",
    "lineNumber": 63,
    "return": {
      "nullable": null,
      "types": [
        "{children: (Slide|Slide[]), mixin: ?String, slave: ?Boolean}"
      ],
      "spread": false,
      "description": "Allowed propTypes for `<Deck/>`"
    },
    "ignore": true,
    "type": {
      "types": [
        "{\"children\": *, \"mixin\": *}"
      ]
    }
  },
  {
    "__docId__": 54,
    "kind": "get",
    "name": "childContextTypes",
    "memberof": "@dekk/deck/src/index.js~Deck",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "@dekk/deck/src/index.js~Deck.childContextTypes",
    "access": "private",
    "description": "Sends context to decendants.\nIncludes the app store to allow all deck components to access the store\nwithout having to include its own logic.",
    "lineNumber": 78,
    "return": {
      "nullable": null,
      "types": [
        "{store: Object, fragmentHost: number}"
      ],
      "spread": false,
      "description": "The `store` and the `fragmentHost`"
    },
    "ignore": true,
    "type": {
      "types": [
        "{\"store\": *, \"fragmentHost\": *}"
      ]
    }
  },
  {
    "__docId__": 55,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "@dekk/deck/src/index.js~Deck",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "@dekk/deck/src/index.js~Deck#constructor",
    "access": "public",
    "description": "Constructor",
    "lineNumber": 94,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "props",
        "description": "The properties"
      },
      {
        "nullable": null,
        "types": [
          "Slide",
          "Slide[]",
          "Plugins",
          "Plugins[]"
        ],
        "spread": false,
        "optional": false,
        "name": "props.children",
        "description": ""
      },
      {
        "nullable": true,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "props.mixin",
        "description": ""
      },
      {
        "nullable": true,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "props.slave",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 56,
    "kind": "method",
    "name": "getChildContext",
    "memberof": "@dekk/deck/src/index.js~Deck",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "@dekk/deck/src/index.js~Deck#getChildContext",
    "access": "private",
    "description": "",
    "lineNumber": 103,
    "return": {
      "nullable": null,
      "types": [
        "{store: store}"
      ],
      "spread": false,
      "description": "The child context."
    },
    "ignore": true,
    "params": []
  },
  {
    "__docId__": 57,
    "kind": "method",
    "name": "componentWillMount",
    "memberof": "@dekk/deck/src/index.js~Deck",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "@dekk/deck/src/index.js~Deck#componentWillMount",
    "access": "private",
    "description": "",
    "lineNumber": 112,
    "ignore": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 58,
    "kind": "method",
    "name": "componentWillReceiveProps",
    "memberof": "@dekk/deck/src/index.js~Deck",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "@dekk/deck/src/index.js~Deck#componentWillReceiveProps",
    "access": "private",
    "description": "",
    "lineNumber": 119,
    "ignore": true,
    "params": [
      {
        "name": "newProps",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 59,
    "kind": "method",
    "name": "buildFragmentHosts",
    "memberof": "@dekk/deck/src/index.js~Deck",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "@dekk/deck/src/index.js~Deck#buildFragmentHosts",
    "access": "private",
    "description": "",
    "lineNumber": 131,
    "ignore": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 60,
    "kind": "get",
    "name": "plugins",
    "memberof": "@dekk/deck/src/index.js~Deck",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "@dekk/deck/src/index.js~Deck#plugins",
    "access": "private",
    "description": "",
    "lineNumber": 140,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 61,
    "kind": "get",
    "name": "elements",
    "memberof": "@dekk/deck/src/index.js~Deck",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "@dekk/deck/src/index.js~Deck#elements",
    "access": "private",
    "description": "",
    "lineNumber": 164,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 62,
    "kind": "get",
    "name": "slots",
    "memberof": "@dekk/deck/src/index.js~Deck",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "@dekk/deck/src/index.js~Deck#slots",
    "access": "private",
    "description": "",
    "lineNumber": 187,
    "ignore": true,
    "type": {
      "types": [
        "undefined[]"
      ]
    }
  },
  {
    "__docId__": 63,
    "kind": "get",
    "name": "slides",
    "memberof": "@dekk/deck/src/index.js~Deck",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "@dekk/deck/src/index.js~Deck#slides",
    "access": "private",
    "description": "",
    "lineNumber": 194,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 64,
    "kind": "get",
    "name": "visibleSlides",
    "memberof": "@dekk/deck/src/index.js~Deck",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "@dekk/deck/src/index.js~Deck#visibleSlides",
    "access": "private",
    "description": "Get the `children` by a range of `+-1` around the current slide.\nIt renders a maximum of 3 slides (previous, current, next)\nThis allows various transitions between slides.",
    "lineNumber": 208,
    "return": {
      "nullable": null,
      "types": [
        "Array<Slide>"
      ],
      "spread": false,
      "description": "returns an array of max 3 slides"
    },
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 65,
    "kind": "method",
    "name": "render",
    "memberof": "@dekk/deck/src/index.js~Deck",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "@dekk/deck/src/index.js~Deck#render",
    "access": "private",
    "description": "",
    "lineNumber": 259,
    "return": {
      "nullable": null,
      "types": [
        "Wrapper"
      ],
      "spread": false,
      "description": "The entire Deck including paging logic inside a Wrapper"
    },
    "ignore": true,
    "params": []
  },
  {
    "__docId__": 66,
    "kind": "file",
    "name": "@dekk/deck/src/plugins.js",
    "content": "import PropTypes from 'prop-types'\n\n/**\n * It allows adding plugins to Dekk.\n * Plugins do not render anything.\n * Plugins usually use the Component lifecycle (componentWillMount etc.)\n * to their advantage.\n *\n * @public\n * @param {Object} props\n *   The properties\n * @param {(ReactElement|ReactElement[])} props.children\n *   One or more plugins\n * @example\n * import Deck, {Plugins} from '@dekk/deck'\n * import Url from '@dekk/url'\n * import Paging from '@dekk/paging'\n *\n * export default (\n *   <Deck>\n *     <Plugins>\n *       <Url/>\n *       <Paging/>\n *     </Plugins>\n *   </Deck>\n * )\n */\nconst Plugins = props => null\n\n/**\n * @private\n */\nPlugins.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.element,\n    PropTypes.arrayOf(PropTypes.element)\n  ])\n}\n\nexport default Plugins\n",
    "static": true,
    "longname": "/Users/greada/Documents/workspace/s2/dekk/@dekk/deck/src/plugins.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 67,
    "kind": "function",
    "name": "Plugins",
    "memberof": "@dekk/deck/src/plugins.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "@dekk/deck/src/plugins.js~Plugins",
    "access": "public",
    "export": true,
    "importPath": "@dekk/deck",
    "importStyle": "Plugins",
    "description": "It allows adding plugins to Dekk.\nPlugins do not render anything.\nPlugins usually use the Component lifecycle (componentWillMount etc.)\nto their advantage.",
    "examples": [
      "import Deck, {Plugins} from '@dekk/deck'\nimport Url from '@dekk/url'\nimport Paging from '@dekk/paging'\n\nexport default (\n  <Deck>\n    <Plugins>\n      <Url/>\n      <Paging/>\n    </Plugins>\n  </Deck>\n)"
    ],
    "lineNumber": 28,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "props",
        "description": "The properties"
      },
      {
        "nullable": null,
        "types": [
          "ReactElement",
          "ReactElement[]"
        ],
        "spread": false,
        "optional": false,
        "name": "props.children",
        "description": "One or more plugins"
      }
    ],
    "return": null
  },
  {
    "__docId__": 68,
    "kind": "file",
    "name": "@dekk/deck/src/slides-wrapper.js",
    "content": "import PropTypes from 'prop-types'\nimport styled from 'styled-components'\n\n/**\n * A wrapper around the slides.\n * This will help with the layout e.g. adding\n * padding to Deck and therefore allowing absolute posiitoned\n * static elements via the `Elements` component.\n * @private\n */\nconst SlidesWrapper = styled.div`\n  flex: 1 0 100%;\n  height: 100%;\n  width: 100%;\n  position: relative;\n  overflow: hidden;\n`\n\n/**\n * Allowed propTypes for `<SlidesWrapper/>`\n * @private\n * @param {Array<Deck.visibleSlides>} children\n * @type {Object}\n */\nSlidesWrapper.propTypes = {\n  children: PropTypes.arrayOf(PropTypes.element)\n}\n\nexport default SlidesWrapper\n",
    "static": true,
    "longname": "/Users/greada/Documents/workspace/s2/dekk/@dekk/deck/src/slides-wrapper.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 69,
    "kind": "variable",
    "name": "SlidesWrapper",
    "memberof": "@dekk/deck/src/slides-wrapper.js",
    "static": true,
    "longname": "@dekk/deck/src/slides-wrapper.js~SlidesWrapper",
    "access": "private",
    "export": true,
    "importPath": "@dekk/deck",
    "importStyle": "SlidesWrapper",
    "description": "A wrapper around the slides.\nThis will help with the layout e.g. adding\npadding to Deck and therefore allowing absolute posiitoned\nstatic elements via the `Elements` component.",
    "lineNumber": 11,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 70,
    "kind": "file",
    "name": "@dekk/deck/src/wrapper.js",
    "content": "import PropTypes from 'prop-types'\nimport styled from 'styled-components'\n\n/**\n * Styled Wrapper Component. This component is used to wrap the slides.\n * It is private but allows modification by passing a mixin to `<Deck/>`\n * @private\n * @type {StyledComponent}\n * @property {{mixin: ?String, children: Array<Deck.slides,Deck.paging>}} props\n *   A mixin to allow extending Deck's style.\n *\n *   Required Styles are declared as `!important`\n *\n *   **The following properties are locked:**\n *\n *   * `position`\n *   * `top`\n *   * `right`\n *   * `bottom`\n *   * `left`\n *   * `overflow`\n *\n *   In rare cases when these need to be modified an `!important` declaration\n *   is required.\n *   A mixin can be any valid set of CSS rules.\n *\n *   Syntax features are as defined\n *   by styled-components {@link https://www.styled-components.com/docs}\n *\n *   @example\n *   // This private Component shoulld only be used by Decck itself\n *   // It is used as follows\n *   return (\n *     <Wrapper mixin={this.props.mixin}>\n *       {this.paging}\n *       {this.slides}\n *     </Wrapper>\n *   )\n */\nconst Wrapper = styled.div`\n  position: absolute !important;\n  top: 0 !important;\n  right: 0 !important;\n  bottom: 0 !important;\n  left: 0 !important;\n  display: flex !important;\n  box-sizing: border-box !important;\n  ${({mixin}) => mixin || ''};\n`\n\n/**\n * Display name for `<Wrapper/>`\n * @private\n * @type {String}\n */\nWrapper.displayName = 'Wapper'\n\n/**\n * Allowed propTypes for `<Wrapper/>`\n * @private\n * @param {Array<SlidesWrapper,Deck.elements,Dekk.plugins>} children\n * @param {String,Array} mixin\n * @type {Object}\n */\nWrapper.propTypes = {\n  children: PropTypes.node,\n  mixin: PropTypes.oneOfType([PropTypes.array, PropTypes.string])\n}\n\nexport default Wrapper\n",
    "static": true,
    "longname": "/Users/greada/Documents/workspace/s2/dekk/@dekk/deck/src/wrapper.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 71,
    "kind": "variable",
    "name": "Wrapper",
    "memberof": "@dekk/deck/src/wrapper.js",
    "static": true,
    "longname": "@dekk/deck/src/wrapper.js~Wrapper",
    "access": "private",
    "export": true,
    "importPath": "@dekk/deck",
    "importStyle": "Wrapper",
    "description": "Styled Wrapper Component. This component is used to wrap the slides.\nIt is private but allows modification by passing a mixin to `<Deck/>`",
    "examples": [
      "  // This private Component shoulld only be used by Decck itself\n  // It is used as follows\n  return (\n    <Wrapper mixin={this.props.mixin}>\n      {this.paging}\n      {this.slides}\n    </Wrapper>\n  )"
    ],
    "lineNumber": 40,
    "properties": [
      {
        "nullable": null,
        "types": [
          "{mixin: ?String, children: Array<Deck.slides,Deck.paging>}"
        ],
        "spread": false,
        "optional": false,
        "name": "props",
        "description": "A mixin to allow extending Deck's style.\n\n  Required Styles are declared as `!important`\n\n  **The following properties are locked:**\n\n  * `position`\n  * `top`\n  * `right`\n  * `bottom`\n  * `left`\n  * `overflow`\n\n  In rare cases when these need to be modified an `!important` declaration\n  is required.\n  A mixin can be any valid set of CSS rules.\n\n  Syntax features are as defined\n  by styled-components {@link https://www.styled-components.com/docs}"
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "StyledComponent"
      ],
      "spread": false,
      "description": null
    },
    "ignore": true
  },
  {
    "__docId__": 72,
    "kind": "file",
    "name": "@dekk/fragment/src/fragment.js",
    "content": "import React, {Component} from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\n\n/**\n * Styled version of the Fragment component\n * @see Fragment\n * @private\n * @type {StyledComponent}\n * @reactProps {Object} props\n *   The properties\n * @reactProps {(ReactNode|ReactNode[])} children\n * @reactProps {?Boolean} active\n * @reactProps {?string} animation\n */\nconst StyledFragment = styled.span`\n  display: ${({display}) => display || 'inline-block'};\n  ${props =>\n    props.animation ||\n    `\n      visibility: ${props.active ? 'visible' : 'hidden'}\n  `};\n`\n\n/**\n * @private\n * @type {String}\n */\nStyledFragment.displayName = 'StyledFragment'\n\n/**\n * @private\n * @type {Object}\n * @prop {(ReactNode|ReactNode[])} children\n * @prop {?Boolean} active\n * @prop {?(String|Array)} animation\n */\nStyledFragment.propTypes = {\n  children: PropTypes.node,\n  active: PropTypes.bool,\n  animation: PropTypes.oneOfType([PropTypes.array, PropTypes.string])\n}\n\nexport default StyledFragment\n",
    "static": true,
    "longname": "/Users/greada/Documents/workspace/s2/dekk/@dekk/fragment/src/fragment.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 73,
    "kind": "variable",
    "name": "StyledFragment",
    "memberof": "@dekk/fragment/src/fragment.js",
    "static": true,
    "longname": "@dekk/fragment/src/fragment.js~StyledFragment",
    "access": "private",
    "export": true,
    "importPath": "@dekk/fragment",
    "importStyle": "StyledFragment",
    "description": "Styled version of the Fragment component",
    "see": [
      "Fragment"
    ],
    "lineNumber": 16,
    "unknown": [
      {
        "tagName": "@reactProps",
        "tagValue": "{Object} props\n  The properties"
      },
      {
        "tagName": "@reactProps",
        "tagValue": "{(ReactNode|ReactNode[])} children"
      },
      {
        "tagName": "@reactProps",
        "tagValue": "{?Boolean} active"
      },
      {
        "tagName": "@reactProps",
        "tagValue": "{?string} animation"
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "StyledComponent"
      ],
      "spread": false,
      "description": null
    },
    "ignore": true
  },
  {
    "__docId__": 74,
    "kind": "file",
    "name": "@dekk/fragment/src/index.js",
    "content": "import React, {Component} from 'react'\nimport PropTypes from 'prop-types'\nimport {Motion, spring} from 'react-motion'\n\nimport StyledFragment from './fragment'\n\n/**\n * Class for fragment.\n * @public\n *\n * @class Fragment\n * @param {Object} props\n *   The properties\n * @param {(ReactElement|ReactElement[])} props.children\n * @param {number} props.order\n * @param {?Boolean} props.root\n * @param {Object} context\n *   The context\n */\nexport default class Fragment extends Component {\n  /**\n   * @private\n   * @return {{children: (ReactElement|ReactElement[]), animation: ?(String|Array), order: ?number}}\n   *   Allowed propTypes for `<Fragment/>`\n   */\n  static get propTypes() {\n    return {\n      children: PropTypes.node.isRequired,\n      animation: PropTypes.oneOfType([PropTypes.array, PropTypes.string]),\n      order: PropTypes.number.isRequired\n    }\n  }\n\n  /**\n   * Get contextTypes\n   * @private\n   *\n   * @return {{store: store, fragmentHost: number, hostedFragmentOrder: number}}\n   */\n  static get contextTypes() {\n    return {\n      store: PropTypes.object.isRequired,\n      fragmentHost: PropTypes.number,\n      hostedFragmentOrder: PropTypes.number\n    }\n  }\n\n  /**\n   * Sends context to decendants. Includes the app store to allow all deck\n   * components to access the store without having to include its own logic.\n   * @private\n   *\n   * @return {{hostedFragmentOrder: number}}\n   */\n  static get childContextTypes() {\n    return {\n      hostedFragmentOrder: PropTypes.number\n    }\n  }\n\n  /**\n   * Constructor\n   * @public\n   * @param {Object}                  props\n   *   The properties\n   * @param {(ReactNode|ReactNode[])} props.children\n   * @param {number}                  props.order\n   * @param {?Boolean}                props.root\n   * @param {Object}                  context\n   *   The context\n   */\n  constructor(props, context) {\n    super(props, context)\n  }\n\n  /**\n   * Gets the child context.\n   * @private\n   * @return {{hostedFragmentOrder: number}}\n   *   The child context.\n   */\n  getChildContext() {\n    return {\n      hostedFragmentOrder: this.props.root ? this.props.order : 0\n    }\n  }\n\n  /**\n   * Before the fragments are mounted we need to tell the application about\n   * their exitsance and behavior.\n   * @private\n   */\n  componentWillMount() {\n    const {order} = this.props\n    const {fragmentHost, hostedFragmentOrder = 0} = this.context\n    // Get the current host to allow extending it.\n    const host = this.context.store.fragmentHosts[fragmentHost] || []\n\n    // Handle root components. the root index is added to nested fragments\n    // to allow them to be rendered before or after their parent fragment\n    const fragmentOrder = order + hostedFragmentOrder\n\n    // Only add new indexes to the queue.\n    // Duplicate indexes will appear at the same time.\n    // Root components are respected by definition.\n    if (host.indexOf(fragmentOrder) < 0) {\n      host.push(fragmentOrder)\n    }\n\n    // If no fragment has been defined with `0` we need to add a position to\n    // our host\n    if (host.length && host.indexOf(0) < 0) {\n      host.push(0)\n    }\n    // Sort the fragment indexes and update the store\n    this.context.store.fragmentHosts[fragmentHost] = host.sort((a, b) => a - b)\n  }\n\n  /**\n   * @private\n   * @return {number}\n   *   The number of fragment indexes (steps to next slide)\n   */\n  get length() {\n    return this.context.store.fragmentHosts[this.context.fragmentHost].length\n  }\n\n  /**\n   * @private\n   * @return {StyledFragment}\n   *   The fragment including the entire logic\n   */\n  render() {\n    const {fragmentHost, hostedFragmentOrder = 0, store} = this.context\n    // Define several flags to determine the acitve state\n    // of the fragment.\n    const isPrev = fragmentHost < store.slideIndex\n    const isNext = fragmentHost > store.slideIndex\n    const fragmentOrder = this.props.order + hostedFragmentOrder\n    const isZero = fragmentOrder === 0\n    const isActivated = store.fragmentOrder >= fragmentOrder\n    const isActive = isPrev || (isNext ? isZero : isActivated)\n    const springStyle = {\n      time: spring(isActive ? 0 : 1, {\n        ...this.props.springSettings\n      })\n    }\n    return (\n      <Motion style={springStyle}>\n        {({time}) => {\n          const style = {\n            '--time': time\n          }\n          return (\n            <StyledFragment\n              style={style}\n              active={isActive}\n              animation={this.props.animation}>\n              {this.props.children}\n            </StyledFragment>\n          )\n        }}\n      </Motion>\n    )\n  }\n}\n\n/**\n * Fragment root component. When using the fragmentRoot, nested Fragments start\n * after the parent. This is a curry version of Fragment.\n * @see    Fragment\n * @public\n * @class  FragmentRoot\n * @reactProps {Object} props\n * @reactProps {(ReactElement|ReactElement[])} props.children\n * @reactProps {number} props.order\n * @return {Fragment}\n *   A Fragment component as root\n */\nexport const FragmentRoot = props => <Fragment {...props} root />\n",
    "static": true,
    "longname": "/Users/greada/Documents/workspace/s2/dekk/@dekk/fragment/src/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 75,
    "kind": "class",
    "name": "Fragment",
    "memberof": "@dekk/fragment/src/index.js",
    "static": true,
    "longname": "@dekk/fragment/src/index.js~Fragment",
    "access": "public",
    "export": true,
    "importPath": "@dekk/fragment",
    "importStyle": "Fragment",
    "description": "Class for fragment.",
    "lineNumber": 20,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "Fragment"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "props",
        "description": "The properties"
      },
      {
        "nullable": null,
        "types": [
          "ReactElement",
          "ReactElement[]"
        ],
        "spread": false,
        "optional": false,
        "name": "props.children",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "props.order",
        "description": ""
      },
      {
        "nullable": true,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "props.root",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "context",
        "description": "The context"
      }
    ],
    "interface": false,
    "extends": [
      "react~Component"
    ]
  },
  {
    "__docId__": 76,
    "kind": "get",
    "name": "propTypes",
    "memberof": "@dekk/fragment/src/index.js~Fragment",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "@dekk/fragment/src/index.js~Fragment.propTypes",
    "access": "private",
    "description": "",
    "lineNumber": 26,
    "return": {
      "nullable": null,
      "types": [
        "{children: (ReactElement|ReactElement[]), animation: ?(String|Array), order: ?number}"
      ],
      "spread": false,
      "description": "Allowed propTypes for `<Fragment/>`"
    },
    "ignore": true,
    "type": {
      "types": [
        "{\"children\": *, \"animation\": *, \"order\": *}"
      ]
    }
  },
  {
    "__docId__": 77,
    "kind": "get",
    "name": "contextTypes",
    "memberof": "@dekk/fragment/src/index.js~Fragment",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "@dekk/fragment/src/index.js~Fragment.contextTypes",
    "access": "private",
    "description": "Get contextTypes",
    "lineNumber": 40,
    "return": {
      "nullable": null,
      "types": [
        "{store: store, fragmentHost: number, hostedFragmentOrder: number}"
      ],
      "spread": false,
      "description": ""
    },
    "ignore": true,
    "type": {
      "types": [
        "{\"store\": *, \"fragmentHost\": *, \"hostedFragmentOrder\": *}"
      ]
    }
  },
  {
    "__docId__": 78,
    "kind": "get",
    "name": "childContextTypes",
    "memberof": "@dekk/fragment/src/index.js~Fragment",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "@dekk/fragment/src/index.js~Fragment.childContextTypes",
    "access": "private",
    "description": "Sends context to decendants. Includes the app store to allow all deck\ncomponents to access the store without having to include its own logic.",
    "lineNumber": 55,
    "return": {
      "nullable": null,
      "types": [
        "{hostedFragmentOrder: number}"
      ],
      "spread": false,
      "description": ""
    },
    "ignore": true,
    "type": {
      "types": [
        "{\"hostedFragmentOrder\": *}"
      ]
    }
  },
  {
    "__docId__": 79,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "@dekk/fragment/src/index.js~Fragment",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "@dekk/fragment/src/index.js~Fragment#constructor",
    "access": "public",
    "description": "Constructor",
    "lineNumber": 72,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "props",
        "description": "The properties"
      },
      {
        "nullable": null,
        "types": [
          "ReactNode",
          "ReactNode[]"
        ],
        "spread": false,
        "optional": false,
        "name": "props.children",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "props.order",
        "description": ""
      },
      {
        "nullable": true,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "props.root",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "context",
        "description": "The context"
      }
    ]
  },
  {
    "__docId__": 80,
    "kind": "method",
    "name": "getChildContext",
    "memberof": "@dekk/fragment/src/index.js~Fragment",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "@dekk/fragment/src/index.js~Fragment#getChildContext",
    "access": "private",
    "description": "Gets the child context.",
    "lineNumber": 82,
    "return": {
      "nullable": null,
      "types": [
        "{hostedFragmentOrder: number}"
      ],
      "spread": false,
      "description": "The child context."
    },
    "ignore": true,
    "params": []
  },
  {
    "__docId__": 81,
    "kind": "method",
    "name": "componentWillMount",
    "memberof": "@dekk/fragment/src/index.js~Fragment",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "@dekk/fragment/src/index.js~Fragment#componentWillMount",
    "access": "private",
    "description": "Before the fragments are mounted we need to tell the application about\ntheir exitsance and behavior.",
    "lineNumber": 93,
    "ignore": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 82,
    "kind": "get",
    "name": "length",
    "memberof": "@dekk/fragment/src/index.js~Fragment",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "@dekk/fragment/src/index.js~Fragment#length",
    "access": "private",
    "description": "",
    "lineNumber": 124,
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "The number of fragment indexes (steps to next slide)"
    },
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 83,
    "kind": "method",
    "name": "render",
    "memberof": "@dekk/fragment/src/index.js~Fragment",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "@dekk/fragment/src/index.js~Fragment#render",
    "access": "private",
    "description": "",
    "lineNumber": 133,
    "return": {
      "nullable": null,
      "types": [
        "StyledFragment"
      ],
      "spread": false,
      "description": "The fragment including the entire logic"
    },
    "ignore": true,
    "params": []
  },
  {
    "__docId__": 84,
    "kind": "function",
    "name": "FragmentRoot",
    "memberof": "@dekk/fragment/src/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "@dekk/fragment/src/index.js~FragmentRoot",
    "access": "public",
    "export": true,
    "importPath": "@dekk/fragment",
    "importStyle": "{FragmentRoot}",
    "description": "Fragment root component. When using the fragmentRoot, nested Fragments start\nafter the parent. This is a curry version of Fragment.",
    "see": [
      "   Fragment"
    ],
    "lineNumber": 180,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": " FragmentRoot"
      },
      {
        "tagName": "@reactProps",
        "tagValue": "{Object} props"
      },
      {
        "tagName": "@reactProps",
        "tagValue": "{(ReactElement|ReactElement[])} props.children"
      },
      {
        "tagName": "@reactProps",
        "tagValue": "{number} props.order"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Fragment"
      ],
      "spread": false,
      "description": "A Fragment component as root"
    },
    "params": [
      {
        "name": "props",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 85,
    "kind": "file",
    "name": "@dekk/image/src/img.js",
    "content": "import PropTypes from 'prop-types'\nimport styled from 'styled-components'\n\n/**\n * Styled img\n * @private\n * @type {StyledComponent}\n * @param {Object} props\n *   The properties\n * @param {Function} props.innerRef\n * @param {String} props.alt\n * @param {String} props.src\n * @param {?String} [props.title]\n */\nconst Img = styled.img`\n  display: none;\n`\n\n/**\n * @private\n * @return {{onLoad: Function, innerRef: Function, src: String, alt: String, title ?String)}}\n *   Allowed propTypes for `<Img/>`\n */\nImg.propTypes = {\n  onLoad: PropTypes.func,\n  innerRef: PropTypes.func,\n  src: PropTypes.string.isRequired,\n  alt: PropTypes.string.isRequired,\n  title: PropTypes.string\n}\n\nexport default Img\n",
    "static": true,
    "longname": "/Users/greada/Documents/workspace/s2/dekk/@dekk/image/src/img.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 86,
    "kind": "variable",
    "name": "Img",
    "memberof": "@dekk/image/src/img.js",
    "static": true,
    "longname": "@dekk/image/src/img.js~Img",
    "access": "private",
    "export": true,
    "importPath": "@dekk/image",
    "importStyle": "Img",
    "description": "Styled img",
    "lineNumber": 15,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "props",
        "description": "The properties"
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "props.innerRef",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "props.alt",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "props.src",
        "description": ""
      },
      {
        "nullable": true,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "props.title",
        "description": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "StyledComponent"
      ],
      "spread": false,
      "description": null
    },
    "ignore": true
  },
  {
    "__docId__": 87,
    "kind": "file",
    "name": "@dekk/image/src/index.js",
    "content": "import React, {Component} from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\nimport Img from './img'\nimport Mask from './mask'\n\n/**\n * Class for image.\n * It loads an image as a background-image. The original image is still\n * rendered for accessibility reasons.\n * @public\n * @class Image\n * @reactProps {Object} props\n *   The properties\n * @reactProps {String} props.alt\n * @reactProps {String} props.src\n * @reactProps {?String} props.title\n */\nclass Image extends Component {\n  /**\n   * @private\n   */\n  state = {}\n  /**\n   * @private\n   * @return {{alt: String, src: String, title: ?String}}\n   *   Allowed propTypes for `<Fragment/>`\n   */\n  static get propTypes() {\n    return {\n      alt: PropTypes.string.isRequired,\n      src: PropTypes.string.isRequired,\n      title: PropTypes.string\n    }\n  }\n  /**\n   * Constructs the object.\n   * @public\n   * @param {Object} props\n   *   The properties\n   * @param {String} props.alt\n   * @param {String} props.src\n   * @param {?String} [props.title]\n   */\n  constructor(props) {\n    super(props)\n    this.getImage = this.getImage.bind(this)\n    this.handleLoad = this.handleLoad.bind(this)\n  }\n\n  /**\n   * Handles the load event of the image.\n   * @private\n   */\n  handleLoad() {\n    this.setState({\n      loaded: true,\n      height: this.image.height,\n      width: this.image.width\n    })\n  }\n\n  /**\n   * Additional CSS rules for the mask\n   * @private\n   * @return {String|Array}\n   */\n  get mixin() {\n    return `\n      --height: ${this.state.height}px;\n      --width: ${this.state.width}px;\n      background-image: url(\"${this.props.src}\");\n    `\n  }\n\n  /**\n   * Assigns the image to `ref`.\n   * @private\n   * @param {ReactElement} el\n   */\n  getImage(el) {\n    /**\n     * @private\n     */\n    this.image = el\n  }\n\n  /**\n   * @private\n   * @return {Mask}\n   *   An image nested inside a mask\n   */\n  render() {\n    return (\n      <Mask mixin={this.mixin}>\n        <Img\n          innerRef={this.getImage}\n          src={this.props.src}\n          alt={this.props.alt}\n          title={this.props.title}\n          onLoad={this.handleLoad}\n        />\n      </Mask>\n    )\n  }\n}\n\nexport default Image\n",
    "static": true,
    "longname": "/Users/greada/Documents/workspace/s2/dekk/@dekk/image/src/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 88,
    "kind": "class",
    "name": "Image",
    "memberof": "@dekk/image/src/index.js",
    "static": true,
    "longname": "@dekk/image/src/index.js~Image",
    "access": "public",
    "export": true,
    "importPath": "@dekk/image",
    "importStyle": "Image",
    "description": "Class for image.\nIt loads an image as a background-image. The original image is still\nrendered for accessibility reasons.",
    "lineNumber": 19,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "Image"
      },
      {
        "tagName": "@reactProps",
        "tagValue": "{Object} props\n  The properties"
      },
      {
        "tagName": "@reactProps",
        "tagValue": "{String} props.alt"
      },
      {
        "tagName": "@reactProps",
        "tagValue": "{String} props.src"
      },
      {
        "tagName": "@reactProps",
        "tagValue": "{?String} props.title"
      }
    ],
    "interface": false,
    "extends": [
      "react~Component"
    ]
  },
  {
    "__docId__": 89,
    "kind": "member",
    "name": "state",
    "memberof": "@dekk/image/src/index.js~Image",
    "static": false,
    "longname": "@dekk/image/src/index.js~Image#state",
    "access": "private",
    "description": "",
    "lineNumber": 23,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 90,
    "kind": "get",
    "name": "propTypes",
    "memberof": "@dekk/image/src/index.js~Image",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "@dekk/image/src/index.js~Image.propTypes",
    "access": "private",
    "description": "",
    "lineNumber": 29,
    "return": {
      "nullable": null,
      "types": [
        "{alt: String, src: String, title: ?String}"
      ],
      "spread": false,
      "description": "Allowed propTypes for `<Fragment/>`"
    },
    "ignore": true,
    "type": {
      "types": [
        "{\"alt\": *, \"src\": *, \"title\": *}"
      ]
    }
  },
  {
    "__docId__": 91,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "@dekk/image/src/index.js~Image",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "@dekk/image/src/index.js~Image#constructor",
    "access": "public",
    "description": "Constructs the object.",
    "lineNumber": 45,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "props",
        "description": "The properties"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "props.alt",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "props.src",
        "description": ""
      },
      {
        "nullable": true,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "props.title",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 94,
    "kind": "method",
    "name": "handleLoad",
    "memberof": "@dekk/image/src/index.js~Image",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "@dekk/image/src/index.js~Image#handleLoad",
    "access": "private",
    "description": "Handles the load event of the image.",
    "lineNumber": 55,
    "ignore": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 95,
    "kind": "get",
    "name": "mixin",
    "memberof": "@dekk/image/src/index.js~Image",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "@dekk/image/src/index.js~Image#mixin",
    "access": "private",
    "description": "Additional CSS rules for the mask",
    "lineNumber": 68,
    "return": {
      "nullable": null,
      "types": [
        "String",
        "Array"
      ],
      "spread": false,
      "description": ""
    },
    "ignore": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 96,
    "kind": "method",
    "name": "getImage",
    "memberof": "@dekk/image/src/index.js~Image",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "@dekk/image/src/index.js~Image#getImage",
    "access": "private",
    "description": "Assigns the image to `ref`.",
    "lineNumber": 81,
    "params": [
      {
        "nullable": null,
        "types": [
          "ReactElement"
        ],
        "spread": false,
        "optional": false,
        "name": "el",
        "description": ""
      }
    ],
    "ignore": true,
    "return": null
  },
  {
    "__docId__": 97,
    "kind": "member",
    "name": "image",
    "memberof": "@dekk/image/src/index.js~Image",
    "static": false,
    "longname": "@dekk/image/src/index.js~Image#image",
    "access": "private",
    "description": "",
    "lineNumber": 85,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 98,
    "kind": "method",
    "name": "render",
    "memberof": "@dekk/image/src/index.js~Image",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "@dekk/image/src/index.js~Image#render",
    "access": "private",
    "description": "",
    "lineNumber": 93,
    "return": {
      "nullable": null,
      "types": [
        "Mask"
      ],
      "spread": false,
      "description": "An image nested inside a mask"
    },
    "ignore": true,
    "params": []
  },
  {
    "__docId__": 99,
    "kind": "file",
    "name": "@dekk/image/src/mask.js",
    "content": "import PropTypes from 'prop-types'\nimport styled from 'styled-components'\n\n/**\n * The image mask\n * @private\n * @type {StyledComponent}\n * @param {Object} props\n *   The properties\n * @param {(Array|String)} props.mixin\n *  An additional mixin\n */\nconst Mask = styled.div`\n  ${props => props.mixin || ''} background-size: cover;\n  width: var(--width);\n  height: var(--height);\n`\n\n/**\n * @private\n * @return {{mixin: ?(String|Array), children: (ReactElement|ReactElement[])}}\n *   Allowed propTypes for `<Mask/>`\n */\nMask.propTypes = {\n  mixin: PropTypes.oneOfType([PropTypes.array, PropTypes.string]),\n  children: PropTypes.instanceOf(Img)\n}\n\nexport default Mask\n",
    "static": true,
    "longname": "/Users/greada/Documents/workspace/s2/dekk/@dekk/image/src/mask.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 100,
    "kind": "variable",
    "name": "Mask",
    "memberof": "@dekk/image/src/mask.js",
    "static": true,
    "longname": "@dekk/image/src/mask.js~Mask",
    "access": "private",
    "export": true,
    "importPath": "@dekk/image",
    "importStyle": "Mask",
    "description": "The image mask",
    "lineNumber": 13,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "props",
        "description": "The properties"
      },
      {
        "nullable": null,
        "types": [
          "Array",
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "props.mixin",
        "description": "An additional mixin"
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "StyledComponent"
      ],
      "spread": false,
      "description": null
    },
    "ignore": true
  },
  {
    "__docId__": 101,
    "kind": "file",
    "name": "@dekk/listener/src/index.js",
    "content": "import {Component} from 'react'\nimport PropTypes from 'prop-types'\n\n/**\n * @public\n */\nclass Listener extends Component {\n  /**\n   * @private\n   */\n  static get propTypes() {\n    return {\n      onSlide: PropTypes.func,\n      onFragment: PropTypes.func\n    }\n  }\n\n  /**\n   * @private\n   */\n  static get defaultProps() {\n    return {\n      onSlide: () => null,\n      onFragment: () => null\n    }\n  }\n\n  /**\n   * @public\n   * @param {Object} props\n   *   The properties\n   * @param {listenerOnSlide} props.onSlide\n   *   Callback when the slide changes\n   * @param {listenerOnFragment} props.onFragment\n   *   Callback when the fragmnet changes\n   * @param {number} props.slideCount\n   *   (Injected via Dekk)\n   * @param {number} props.slideIndex\n   *   (Injected via Dekk)\n   * @param {number} props.fragmentCount\n   *   (Injected via Dekk)\n   * @param {number} props.fragmentIndex\n   *   (Injected via Dekk)\n   * @param {number} props.fragmentOrder\n   *   (Injected via Dekk)\n   * @param {function} props.toFragment\n   *   (Injected via Dekk)\n   * @param {function} props.toSlide\n   *   (Injected via Dekk)\n   * @param {function} props.toNextFragment\n   *   (Injected via Dekk)\n   * @param {function} props.toPrevFragment\n   *   (Injected via Dekk)\n   * @param {function} props.toNextSlide\n   *   (Injected via Dekk)\n   * @param {function} props.toPrevSlide\n   *   (Injected via Dekk)\n   * @example\n   * import Deck, {Plugins} from '@dekk/deck'\n   * import Listener from '@dekk/listener'\n   *\n   * const handleSlide = slideIndex => {\n   *   // code\n   * }\n   *\n   * const handleFragment = (\n   *   slideIndex,\n   *   slideCount,\n   *   fragmentIndex,\n   *   fragmentOrder,\n   *   fragmentCount) => {\n   *  // code\n   * }\n   * export default (\n   *   <Deck>\n   *     <Plugins>\n   *       <Listener onSlide={handleSlide}\n   *                 onFragment={handleFragment}/>\n   *     </Plugins>\n   *   </Deck>\n   * )\n   */\n  constructor(props) {\n    super(props)\n  }\n\n  /**\n   * @private\n   */\n  componentWillReceiveProps({\n    slideIndex,\n    slideCount,\n    fragmentOrder,\n    fragmentIndex,\n    fragmentCount\n  }) {\n    if (\n      this.props.fragmentIndex !== fragmentIndex &&\n      typeof fragmentOrder !== 'undefined'\n    ) {\n      this.props.onFragment(\n        slideIndex,\n        slideCount,\n        fragmentIndex,\n        fragmentOrder,\n        fragmentCount\n      )\n    } else if (this.props.slideIndex !== slideIndex) {\n      this.props.onSlide(slideIndex, slideCount)\n    }\n  }\n\n  /**\n   * @private\n   */\n  render() {\n    return null\n  }\n}\n\n/**\n * @typedef listenerOnSlide\n * @param {number} slideIndex\n *   Index of the currently active slide\n * @param {number} slideCount\n *   Total number of slides\n */\n\n/**\n * @typedef listenerOnFragment\n * @param {number} slideIndex\n *   Index of the currently active slide\n * @param {number} slideCount\n *   Total number of slides\n * @param {number} fragmentIndex\n *   Index of the currently active fragment\n * @param {number} fragmentOrder\n *   Order of the currently active fragment\n * @param {number} fragmentCount\n *   Total number of fragments in the currently active slide\n */\n\nexport default Listener\n",
    "static": true,
    "longname": "/Users/greada/Documents/workspace/s2/dekk/@dekk/listener/src/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 102,
    "kind": "class",
    "name": "Listener",
    "memberof": "@dekk/listener/src/index.js",
    "static": true,
    "longname": "@dekk/listener/src/index.js~Listener",
    "access": "public",
    "export": true,
    "importPath": "@dekk/listener",
    "importStyle": "Listener",
    "description": "",
    "lineNumber": 7,
    "interface": false,
    "extends": [
      "react~Component"
    ]
  },
  {
    "__docId__": 103,
    "kind": "typedef",
    "name": "listenerOnSlide",
    "memberof": "@dekk/listener/src/index.js",
    "static": true,
    "longname": "@dekk/listener/src/index.js~listenerOnSlide",
    "access": "public",
    "description": "",
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "slideIndex",
        "description": "Index of the currently active slide"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "slideCount",
        "description": "Total number of slides"
      }
    ],
    "type": {
      "types": [
        "*"
      ],
      "optional": false,
      "name": "listenerOnSlide"
    }
  },
  {
    "__docId__": 104,
    "kind": "typedef",
    "name": "listenerOnFragment",
    "memberof": "@dekk/listener/src/index.js",
    "static": true,
    "longname": "@dekk/listener/src/index.js~listenerOnFragment",
    "access": "public",
    "description": "",
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "slideIndex",
        "description": "Index of the currently active slide"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "slideCount",
        "description": "Total number of slides"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "fragmentIndex",
        "description": "Index of the currently active fragment"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "fragmentOrder",
        "description": "Order of the currently active fragment"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "fragmentCount",
        "description": "Total number of fragments in the currently active slide"
      }
    ],
    "type": {
      "types": [
        "*"
      ],
      "optional": false,
      "name": "listenerOnFragment"
    }
  },
  {
    "__docId__": 105,
    "kind": "get",
    "name": "propTypes",
    "memberof": "@dekk/listener/src/index.js~Listener",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "@dekk/listener/src/index.js~Listener.propTypes",
    "access": "private",
    "description": "",
    "lineNumber": 11,
    "ignore": true,
    "type": {
      "types": [
        "{\"onSlide\": *, \"onFragment\": *}"
      ]
    }
  },
  {
    "__docId__": 106,
    "kind": "get",
    "name": "defaultProps",
    "memberof": "@dekk/listener/src/index.js~Listener",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "@dekk/listener/src/index.js~Listener.defaultProps",
    "access": "private",
    "description": "",
    "lineNumber": 21,
    "ignore": true,
    "type": {
      "types": [
        "{\"onSlide\": *, \"onFragment\": *}"
      ]
    }
  },
  {
    "__docId__": 107,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "@dekk/listener/src/index.js~Listener",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "@dekk/listener/src/index.js~Listener#constructor",
    "access": "public",
    "description": "",
    "examples": [
      "import Deck, {Plugins} from '@dekk/deck'\nimport Listener from '@dekk/listener'\n\nconst handleSlide = slideIndex => {\n  // code\n}\n\nconst handleFragment = (\n  slideIndex,\n  slideCount,\n  fragmentIndex,\n  fragmentOrder,\n  fragmentCount) => {\n // code\n}\nexport default (\n  <Deck>\n    <Plugins>\n      <Listener onSlide={handleSlide}\n                onFragment={handleFragment}/>\n    </Plugins>\n  </Deck>\n)"
    ],
    "lineNumber": 83,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "props",
        "description": "The properties"
      },
      {
        "nullable": null,
        "types": [
          "listenerOnSlide"
        ],
        "spread": false,
        "optional": false,
        "name": "props.onSlide",
        "description": "Callback when the slide changes"
      },
      {
        "nullable": null,
        "types": [
          "listenerOnFragment"
        ],
        "spread": false,
        "optional": false,
        "name": "props.onFragment",
        "description": "Callback when the fragmnet changes"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "props.slideCount",
        "description": "(Injected via Dekk)"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "props.slideIndex",
        "description": "(Injected via Dekk)"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "props.fragmentCount",
        "description": "(Injected via Dekk)"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "props.fragmentIndex",
        "description": "(Injected via Dekk)"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "props.fragmentOrder",
        "description": "(Injected via Dekk)"
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "props.toFragment",
        "description": "(Injected via Dekk)"
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "props.toSlide",
        "description": "(Injected via Dekk)"
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "props.toNextFragment",
        "description": "(Injected via Dekk)"
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "props.toPrevFragment",
        "description": "(Injected via Dekk)"
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "props.toNextSlide",
        "description": "(Injected via Dekk)"
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "props.toPrevSlide",
        "description": "(Injected via Dekk)"
      }
    ]
  },
  {
    "__docId__": 108,
    "kind": "method",
    "name": "componentWillReceiveProps",
    "memberof": "@dekk/listener/src/index.js~Listener",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "@dekk/listener/src/index.js~Listener#componentWillReceiveProps",
    "access": "private",
    "description": "",
    "lineNumber": 90,
    "ignore": true,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"slideIndex\": *, \"slideCount\": *, \"fragmentOrder\": *, \"fragmentIndex\": *, \"fragmentCount\": *}"
        ],
        "defaultRaw": {
          "slideIndex": null,
          "slideCount": null,
          "fragmentOrder": null,
          "fragmentIndex": null,
          "fragmentCount": null
        },
        "defaultValue": "{\"slideIndex\":null,\"slideCount\":null,\"fragmentOrder\":null,\"fragmentIndex\":null,\"fragmentCount\":null}"
      }
    ],
    "return": null
  },
  {
    "__docId__": 109,
    "kind": "method",
    "name": "render",
    "memberof": "@dekk/listener/src/index.js~Listener",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "@dekk/listener/src/index.js~Listener#render",
    "access": "private",
    "description": "",
    "lineNumber": 116,
    "ignore": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 110,
    "kind": "file",
    "name": "@dekk/master/src/components.js",
    "content": "/**\n * Helper function for Slot.\n * It can be used to define Master slides\n * @see function#static-function-create\n * @public\n * @return {null}\n */\nexport const Slot = () => null\n/**\n * Helper function for Static.\n * It can be used to define Master slides\n * @see function#static-function-create\n * @public\n * @return {null}\n */\nexport const Static = () => null\n/**\n * Helper function for Master.\n * It can be used to define Master slides\n * @see function#static-function-create\n * @public\n * @return {null}\n */\nexport const Master = () => null\n",
    "static": true,
    "longname": "/Users/greada/Documents/workspace/s2/dekk/@dekk/master/src/components.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 111,
    "kind": "function",
    "name": "Slot",
    "memberof": "@dekk/master/src/components.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "@dekk/master/src/components.js~Slot",
    "access": "public",
    "export": true,
    "importPath": "@dekk/master",
    "importStyle": "{Slot}",
    "description": "Helper function for Slot.\nIt can be used to define Master slides",
    "see": [
      "function#static-function-create"
    ],
    "lineNumber": 8,
    "return": {
      "nullable": null,
      "types": [
        "null"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 112,
    "kind": "function",
    "name": "Static",
    "memberof": "@dekk/master/src/components.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "@dekk/master/src/components.js~Static",
    "access": "public",
    "export": true,
    "importPath": "@dekk/master",
    "importStyle": "{Static}",
    "description": "Helper function for Static.\nIt can be used to define Master slides",
    "see": [
      "function#static-function-create"
    ],
    "lineNumber": 16,
    "return": {
      "nullable": null,
      "types": [
        "null"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 113,
    "kind": "function",
    "name": "Master",
    "memberof": "@dekk/master/src/components.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "@dekk/master/src/components.js~Master",
    "access": "public",
    "export": true,
    "importPath": "@dekk/master",
    "importStyle": "{Master}",
    "description": "Helper function for Master.\nIt can be used to define Master slides",
    "see": [
      "function#static-function-create"
    ],
    "lineNumber": 24,
    "return": {
      "nullable": null,
      "types": [
        "null"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 114,
    "kind": "file",
    "name": "@dekk/master/src/create.js",
    "content": "import React, {Children, cloneElement} from 'react'\nimport PropTypes from 'prop-types'\nimport Master from './master'\nimport {Slot} from './components'\n\n/**\n * # createMaster\n * This is a helper function to create master slides.\n * A master slide is an already layouted slide with predefined slots.\n *\n * To create a master a wrapping component is used. While it does not\n * matter what this component is, Dekk already provides this for you.\n * Simply use `Master` from `./components`.\n *\n * The schildren are then parsed and cheked to ensure the slides have\n * the correct content. These checks are very simple and only define\n * which children should be used.\n * To ensure further safety you can define PropTypes or other mechanisms\n * to ensure the intended usage of your master slides.\n *\n * This function returns a smart React Component which has all allowed\n * slots as statics.\n * @public\n * @param {ReactComponent} master\n *   A wrapping component (could even be just a `<div>`)\n * @return {MasterSlide}\n * @example\n * import React from 'react'\n * import createmaster, {Master, Slot} from '@dekk/master'\n * import {Title, Subtitle} from './components/headlines/'\n *\n * const CoverSlide = createMaster(\n *   <Master>\n *     <Slot name=\"Top\"\n *           only={[Title]}/>\n *     <Slot name=\"Bottom\"\n *           only={[Subtitle]}/>\n *   </Master>\n * )\n *\n * @example\n * import React from 'react'\n * import createmaster, {Master, Slot} from '@dekk/master'\n * import Image from '@dekk/Image'\n *\n * const ImageAndText = createMaster(\n *   <Master>\n *     <Slot name=\"Left\"\n *           not={[Image]}/>\n *     <Slot name=\"Right\"\n *           only={[Image]}/>\n *   </Master>\n * )\n */\nexport default function createMaster(master) {\n  const {children, className} = master.props\n\n  /**\n   * @public\n   * @type {MasterSlide}\n   */\n  const Slide = props => {\n    return (\n      <Master {...props} content={props.children}>\n        {Children.toArray(children).map((child, i) => {\n          if (child.type === Slot) {\n            return cloneElement(child, {\n              key: `master-slot__${i}`,\n              component: Slide[child.props.name]\n            })\n          }\n          return child\n        })}\n      </Master>\n    )\n  }\n\n  // Filter all non `Slot` Components (`<Static/>` is removed)\n  // then set them as statics on `Slide`\n  // Each slot creates an empty unique function which is used to\n  // validate the content.\n  Children.toArray(children)\n    .filter(child => child.type === Slot)\n    .forEach(slot => {\n      const {name} = slot.props\n      Slide[name] = props => null\n    })\n\n  /**\n   * Allowed propTypes for `<Slide/>`\n   * @private\n   * @property {ReactElement} children\n   * @property {String} className\n   */\n  Slide.propTypes = {\n    children: PropTypes.node,\n    className: PropTypes.string\n  }\n\n  return Slide\n}\n/**\n * This Component will be returned by `createMaster`.\n * It has a static method for each slot that has been added.\n * @public\n * @typedef MasterSlide\n * @type {ReactComponent}\n * @param {Object} props\n * @param {Object} props.mixin\n *   A mixin that is added to the style block\n */\n",
    "static": true,
    "longname": "/Users/greada/Documents/workspace/s2/dekk/@dekk/master/src/create.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 115,
    "kind": "function",
    "name": "createMaster",
    "memberof": "@dekk/master/src/create.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "@dekk/master/src/create.js~createMaster",
    "access": "public",
    "export": true,
    "importPath": "@dekk/master",
    "importStyle": "createMaster",
    "description": "# createMaster\nThis is a helper function to create master slides.\nA master slide is an already layouted slide with predefined slots.\n\nTo create a master a wrapping component is used. While it does not\nmatter what this component is, Dekk already provides this for you.\nSimply use `Master` from `./components`.\n\nThe schildren are then parsed and cheked to ensure the slides have\nthe correct content. These checks are very simple and only define\nwhich children should be used.\nTo ensure further safety you can define PropTypes or other mechanisms\nto ensure the intended usage of your master slides.\n\nThis function returns a smart React Component which has all allowed\nslots as statics.",
    "examples": [
      "import React from 'react'\nimport createmaster, {Master, Slot} from '@dekk/master'\nimport {Title, Subtitle} from './components/headlines/'\n\nconst CoverSlide = createMaster(\n  <Master>\n    <Slot name=\"Top\"\n          only={[Title]}/>\n    <Slot name=\"Bottom\"\n          only={[Subtitle]}/>\n  </Master>\n)",
      "import React from 'react'\nimport createmaster, {Master, Slot} from '@dekk/master'\nimport Image from '@dekk/Image'\n\nconst ImageAndText = createMaster(\n  <Master>\n    <Slot name=\"Left\"\n          not={[Image]}/>\n    <Slot name=\"Right\"\n          only={[Image]}/>\n  </Master>\n)"
    ],
    "lineNumber": 55,
    "params": [
      {
        "nullable": null,
        "types": [
          "ReactComponent"
        ],
        "spread": false,
        "optional": false,
        "name": "master",
        "description": "A wrapping component (could even be just a `<div>`)"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "MasterSlide"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 116,
    "kind": "typedef",
    "name": "MasterSlide",
    "memberof": "@dekk/master/src/create.js",
    "static": true,
    "longname": "@dekk/master/src/create.js~MasterSlide",
    "access": "public",
    "description": "This Component will be returned by `createMaster`.\nIt has a static method for each slot that has been added.",
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "props",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "props.mixin",
        "description": "A mixin that is added to the style block"
      }
    ],
    "type": {
      "types": [
        "*"
      ],
      "optional": false,
      "name": "MasterSlide"
    }
  },
  {
    "__docId__": 117,
    "kind": "file",
    "name": "@dekk/master/src/index.js",
    "content": "export * from './components'\nexport {default} from './create'\n",
    "static": true,
    "longname": "/Users/greada/Documents/workspace/s2/dekk/@dekk/master/src/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 118,
    "kind": "file",
    "name": "@dekk/master/src/master.js",
    "content": "import React, {Component, Children, cloneElement} from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\nimport Slide from '@dekk/slide'\nimport Notes from '@dekk/speaker-notes'\nimport Fragment, {FragmentRoot} from '@dekk/fragment'\nimport Warning from './warning'\nimport {Slot, Static} from './components'\n\n/**\n * Renders a component that displays a warning about an invalid\n * child component.\n * @private\n * @param {ReactComponent} child\n *   Can be any react component\n * @param {number} index\n *   Used to generate the key property\n * @param {Object} itemProps\n *   The original props of the parent\n * @returns {Warning}\n *   An invalid component warning\n */\nconst invalid = (child, index, itemProps) => (\n  <div key={`slot__${index}`} data-slot={name}>\n    <Warning\n      {...itemProps}\n      type={\n        (child.type && (child.type.displayName || child.type.name)) ||\n        `\"${child}\"`\n      }\n      invalid\n    />\n  </div>\n)\n\n/**\n * Renders a component that displays a warning about an invalid\n * child component.\n * @private\n * @param {String} name\n *   Name of the Component\n * @param {number} index\n *   Used to generate the key property\n * @param {Object} itemProps\n *   The original props of the parent\n * @returns {Warning}\n *   A missing component warning\n */\nconst missing = (name, index, itemProps) => (\n  <div key={`slot__${index}`} data-slot={name}>\n    <Warning {...itemProps} missing />\n  </div>\n)\n\n/**\n * Either renders a component defined in the `only` parameter\n * or returns a warning in case the child does not match the accepted\n * types.\n * @private\n * @param {ReactComponent[]} only\n *   A list of ReactComponents that are allowed\n * @param {ReactComponent} child\n *   The child element that is intended to be added\n * @param {number} index\n *   Used to generate the key property\n * @param {Object} itemProps\n *   The original props of the parent\n */\nconst onlyOrWarning = (only, child, index, itemProps) => {\n  // Check if child is allowed\n  if (only.includes(child.type)) {\n    return child\n  }\n  // in case the child is a fragment, check all child elements\n  if (child.type === Fragment || child.type === FragmentRoot) {\n    return cloneElement(child, {\n      children: Children.toArray(child.props.children).map(child =>\n        onlyOrWarning(only, child)\n      )\n    })\n  }\n  return invalid(child, index, itemProps)\n}\n\n/**\n * Either renders a component not defined in the `not` parameter\n * or returns a warning in case the child matches the unaccepted\n * types.\n * @private\n * @param {ReactComponent[]} not\n *   A list of ReactComponents that are not allowed\n * @param {ReactComponent} child\n *   The child element that is intended to be added\n * @param {number} index\n *   Used to generate the key property\n * @param {Object} itemProps\n *   The original props of the parent\n */\nconst notOrWarning = (not, child, index, itemProps) => {\n  if (child.type === Fragment || child.type === FragmentRoot) {\n    return cloneElement(child, {\n      children: Children.toArray(child.props.children).map(child =>\n        notOrWarning(only, child)\n      )\n    })\n  }\n  if (not.includes(child.type)) {\n    return invalid(child, index, itemProps)\n  }\n  return child\n}\n\n/**\n * This component is hte heart of Dekk/master.\n * It will filter different content types and evaluate based on the\n * configuration.\n *\n * Invalid or missing slots are marked with a visual error to allow\n * creating slides on very strict guidelines.\n *\n * **A master can have different use cases:**\n *\n * * resrict layout of slides\n * * render static components by default\n * * predefine a layout/styles\n * * provide an easy API/usage\n *\n * This class should not be used. It is used inside `createMaster`\n * @see {createMaster}\n *\n * @private\n * @param {Object} props\n *   The properties\n * @param {ReactElement,ReactElement[]} props.children\n *   The slots injected by the slide creator (developer/user)\n * @param {ReactElement,ReactElement[]} props.content\n *   The children injected by the createMaster function (internal/private)\n */\nclass Master extends Component {\n  /**\n   * All `Slot` instances\n   * @private\n   */\n  get slots() {\n    return Children.toArray(this.props.children).filter(\n      child => child.type === Slot\n    )\n  }\n\n  /**\n   * All `Static` instances\n   * @private\n   */\n  get statics() {\n    return Children.toArray(this.props.children).filter(\n      child => child.type === Static\n    )\n  }\n\n  /**\n   * Helper slots are filtered from the children.\n   * These slots are allowed and will be ignored.\n   * state setters, notes etc should be added here\n   * @private\n   */\n  get helperSlots() {\n    return [Notes]\n  }\n\n  /**\n   * Filtered children of the component.\n   * Excludes helperSlots\n   * @private\n   */\n  get content() {\n    return Children.toArray(this.props.content).filter(\n      child => !this.helperSlots.includes(child.type)\n    )\n  }\n\n  /**\n   * Fill all static slots.\n   * Adds a wrapping element with a data-attribute.\n   */\n  get filledStatics() {\n    return this.statics.map((item, i) => (\n      <div key={`static__${i}`} data-static={item.props.name}>\n        {item.props.children}\n      </div>\n    ))\n  }\n\n  /**\n   * Fill all slots.\n   * Checks validity and injects a warning in case of an error\n   * @private\n   */\n  get filledSlots() {\n    return (\n      this.slots\n        .map((item, i) => {\n          const {only, not, required, component, name} = item.props\n          // Get the index of the component inside slot\n          const index = this.content.map(child => child.type).indexOf(component)\n\n          // If no component present either return null\n          // or a warning if the slot requires a child.\n          if (index < 0) {\n            return required ? missing(name, i, item.props) : null\n          }\n          const children = Children.toArray(\n            this.content[index].props.children\n          ).map(\n            (child, idx) =>\n              // Check for `only` and `not` options\n              // If neither is defined simply return the child\n              only\n                ? onlyOrWarning(only, child, idx, item.props)\n                : not ? notOrWarning(not, child, idx, item.props) : child\n          )\n          // If no children exist in a required slot\n          // render a warning about missing content\n          if (required && children.length === 0) {\n            return missing(name, i, item.props)\n          }\n\n          // Return the components wrapped in a slot.\n          return (\n            <div key={`item__${i}`} data-slot={item.props.name}>\n              {children}\n            </div>\n          )\n        })\n        // filter to only return valid content\n        .filter(x => Boolean(x))\n    )\n  }\n\n  /**\n   * @private\n   */\n  render() {\n    /**\n     * Return a slide with the entire content.\n     */\n    return (\n      <Slide {...this.props}>\n        {this.filledStatics}\n        {this.filledSlots}\n      </Slide>\n    )\n  }\n}\n\n/**\n * Allowed propTypes for `<Master/>`\n * @private\n * @property {Slot,Static} children\n * @property {ReactElement,ReactElement[]} content\n */\nMaster.propTypes = {\n  children: (props, propName, componentName) => {\n    /**\n     * An error might be caused and is therefore returned .\n     */\n    const error = new Error(\n      `\"Master\" only accepts children of type \"Slot\" or \"Static\"`\n    )\n    const hasErrors = Boolean(\n      Children.toArray(props[propName])\n        .map(child => {\n          if (![Static, Slot].includes(child.type)) {\n            return error\n          }\n          return child\n        })\n        .filter(x => x === error).length\n    )\n    return hasErrors ? error : null\n  },\n  content: PropTypes.node\n}\n\nexport default Master\n",
    "static": true,
    "longname": "/Users/greada/Documents/workspace/s2/dekk/@dekk/master/src/master.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 119,
    "kind": "function",
    "name": "invalid",
    "memberof": "@dekk/master/src/master.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "@dekk/master/src/master.js~invalid",
    "access": "private",
    "export": false,
    "importPath": "@dekk/master",
    "importStyle": null,
    "description": "Renders a component that displays a warning about an invalid\nchild component.",
    "lineNumber": 23,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Warning}\n  An invalid component warning"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "ReactComponent"
        ],
        "spread": false,
        "optional": false,
        "name": "child",
        "description": "Can be any react component"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "index",
        "description": "Used to generate the key property"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "itemProps",
        "description": "The original props of the parent"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Warning"
      ],
      "spread": false,
      "description": "An invalid component warning"
    },
    "ignore": true
  },
  {
    "__docId__": 120,
    "kind": "function",
    "name": "missing",
    "memberof": "@dekk/master/src/master.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "@dekk/master/src/master.js~missing",
    "access": "private",
    "export": false,
    "importPath": "@dekk/master",
    "importStyle": null,
    "description": "Renders a component that displays a warning about an invalid\nchild component.",
    "lineNumber": 49,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Warning}\n  A missing component warning"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": "Name of the Component"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "index",
        "description": "Used to generate the key property"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "itemProps",
        "description": "The original props of the parent"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Warning"
      ],
      "spread": false,
      "description": "A missing component warning"
    },
    "ignore": true
  },
  {
    "__docId__": 121,
    "kind": "function",
    "name": "onlyOrWarning",
    "memberof": "@dekk/master/src/master.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "@dekk/master/src/master.js~onlyOrWarning",
    "access": "private",
    "export": false,
    "importPath": "@dekk/master",
    "importStyle": null,
    "description": "Either renders a component defined in the `only` parameter\nor returns a warning in case the child does not match the accepted\ntypes.",
    "lineNumber": 69,
    "params": [
      {
        "nullable": null,
        "types": [
          "ReactComponent[]"
        ],
        "spread": false,
        "optional": false,
        "name": "only",
        "description": "A list of ReactComponents that are allowed"
      },
      {
        "nullable": null,
        "types": [
          "ReactComponent"
        ],
        "spread": false,
        "optional": false,
        "name": "child",
        "description": "The child element that is intended to be added"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "index",
        "description": "Used to generate the key property"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "itemProps",
        "description": "The original props of the parent"
      }
    ],
    "ignore": true,
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 122,
    "kind": "function",
    "name": "notOrWarning",
    "memberof": "@dekk/master/src/master.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "@dekk/master/src/master.js~notOrWarning",
    "access": "private",
    "export": false,
    "importPath": "@dekk/master",
    "importStyle": null,
    "description": "Either renders a component not defined in the `not` parameter\nor returns a warning in case the child matches the unaccepted\ntypes.",
    "lineNumber": 99,
    "params": [
      {
        "nullable": null,
        "types": [
          "ReactComponent[]"
        ],
        "spread": false,
        "optional": false,
        "name": "not",
        "description": "A list of ReactComponents that are not allowed"
      },
      {
        "nullable": null,
        "types": [
          "ReactComponent"
        ],
        "spread": false,
        "optional": false,
        "name": "child",
        "description": "The child element that is intended to be added"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "index",
        "description": "Used to generate the key property"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "itemProps",
        "description": "The original props of the parent"
      }
    ],
    "ignore": true,
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 123,
    "kind": "class",
    "name": "Master",
    "memberof": "@dekk/master/src/master.js",
    "static": true,
    "longname": "@dekk/master/src/master.js~Master",
    "access": "private",
    "export": true,
    "importPath": "@dekk/master",
    "importStyle": "Master",
    "description": "This component is hte heart of Dekk/master.\nIt will filter different content types and evaluate based on the\nconfiguration.\n\nInvalid or missing slots are marked with a visual error to allow\ncreating slides on very strict guidelines.\n\n**A master can have different use cases:**\n\n* resrict layout of slides\n* render static components by default\n* predefine a layout/styles\n* provide an easy API/usage\n\nThis class should not be used. It is used inside `createMaster`",
    "see": [
      "{createMaster}"
    ],
    "lineNumber": 139,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "props",
        "description": "The properties"
      },
      {
        "nullable": null,
        "types": [
          "ReactElement,ReactElement[]"
        ],
        "spread": false,
        "optional": false,
        "name": "props.children",
        "description": "The slots injected by the slide creator (developer/user)"
      },
      {
        "nullable": null,
        "types": [
          "ReactElement,ReactElement[]"
        ],
        "spread": false,
        "optional": false,
        "name": "props.content",
        "description": "The children injected by the createMaster function (internal/private)"
      }
    ],
    "interface": false,
    "extends": [
      "react~Component"
    ],
    "ignore": true
  },
  {
    "__docId__": 124,
    "kind": "get",
    "name": "slots",
    "memberof": "@dekk/master/src/master.js~Master",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "@dekk/master/src/master.js~Master#slots",
    "access": "private",
    "description": "All `Slot` instances",
    "lineNumber": 144,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 125,
    "kind": "get",
    "name": "statics",
    "memberof": "@dekk/master/src/master.js~Master",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "@dekk/master/src/master.js~Master#statics",
    "access": "private",
    "description": "All `Static` instances",
    "lineNumber": 154,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 126,
    "kind": "get",
    "name": "helperSlots",
    "memberof": "@dekk/master/src/master.js~Master",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "@dekk/master/src/master.js~Master#helperSlots",
    "access": "private",
    "description": "Helper slots are filtered from the children.\nThese slots are allowed and will be ignored.\nstate setters, notes etc should be added here",
    "lineNumber": 166,
    "ignore": true,
    "type": {
      "types": [
        "undefined[]"
      ]
    }
  },
  {
    "__docId__": 127,
    "kind": "get",
    "name": "content",
    "memberof": "@dekk/master/src/master.js~Master",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "@dekk/master/src/master.js~Master#content",
    "access": "private",
    "description": "Filtered children of the component.\nExcludes helperSlots",
    "lineNumber": 175,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 128,
    "kind": "get",
    "name": "filledStatics",
    "memberof": "@dekk/master/src/master.js~Master",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "@dekk/master/src/master.js~Master#filledStatics",
    "access": "public",
    "description": "Fill all static slots.\nAdds a wrapping element with a data-attribute.",
    "lineNumber": 185,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 129,
    "kind": "get",
    "name": "filledSlots",
    "memberof": "@dekk/master/src/master.js~Master",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "@dekk/master/src/master.js~Master#filledSlots",
    "access": "private",
    "description": "Fill all slots.\nChecks validity and injects a warning in case of an error",
    "lineNumber": 198,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 130,
    "kind": "method",
    "name": "render",
    "memberof": "@dekk/master/src/master.js~Master",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "@dekk/master/src/master.js~Master#render",
    "access": "private",
    "description": "",
    "lineNumber": 242,
    "ignore": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 131,
    "kind": "file",
    "name": "@dekk/master/src/warning.js",
    "content": "import React from 'react'\nimport PropTypes from 'prop-types'\n\n/**\n * Renders a warning containing useful information about the error that\n * caused the warning.\n * In general, it tells you what is wrong and what the correct usage\n * would look like. This is typically a text telling you that while\n * you used component \"A\" only component \"B\" or \"C\" are allowed.\n *\n * @private\n * @param {props} props\n *   The properties\n * @param {RectElement[]} props.not\n *   A list of components that are \"not\" allowed\n * @param {RectElement[]} props.only\n *   A list of \"only\" those components that are allowed\n * @param {Boolean} props.invalid\n *   Set this parameter if the warning is about invalid content\n * @param {Boolean} props.missing\n *   Set this parameter if the warning is about missing content\n * @param {String} props.type\n *   The type that was used and caused this warning\n */\nconst Warning = props => {\n  const {not, only, invalid, missing, type} = props\n  // Prepare a couple of messages that might be returned\n  const onlyMessage = only ? (\n    <div>\n      <strong>Allowed components:</strong>\n      <ul>\n        {only.map((component, i) => (\n          <li key={`warning_item__${i}`}>\n            {component.displayName || component.name}\n          </li>\n        ))}\n      </ul>\n    </div>\n  ) : null\n\n  const notMessage = not ? (\n    <div>\n      <strong>Forbidden components:</strong>\n      <ul>\n        {not.map((component, i) => (\n          <li key={`warning_item__${i}`}>\n            {component.displayName || component.name}\n          </li>\n        ))}\n      </ul>\n    </div>\n  ) : null\n\n  const message = missing ? (\n    <div>\n      <strong>Error: Required slot</strong>\n      {notMessage}\n      {onlyMessage}\n    </div>\n  ) : invalid ? (\n    <div>\n      <strong>Error: Invalid component</strong>\n      <p>Tried to use {type}</p>\n      {notMessage}\n      {onlyMessage}\n    </div>\n  ) : null\n  return <div>{message}</div>\n}\n\n/**\n * Allowed propTypes for `<Warning/>`\n * @private\n * @property {?ReactElement[]} not\n * @property {?ReactElement[]} only\n * @property {String} type\n * @property {?Boolean} invalid\n * @property {?Boolean} missing\n */\nWarning.propTypes = {\n  not: PropTypes.array,\n  only: PropTypes.array,\n  type: PropTypes.string,\n  invalid: PropTypes.bool,\n  missing: PropTypes.bool\n}\n\nexport default Warning\n",
    "static": true,
    "longname": "/Users/greada/Documents/workspace/s2/dekk/@dekk/master/src/warning.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 132,
    "kind": "function",
    "name": "Warning",
    "memberof": "@dekk/master/src/warning.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "@dekk/master/src/warning.js~Warning",
    "access": "private",
    "export": true,
    "importPath": "@dekk/master",
    "importStyle": "Warning",
    "description": "Renders a warning containing useful information about the error that\ncaused the warning.\nIn general, it tells you what is wrong and what the correct usage\nwould look like. This is typically a text telling you that while\nyou used component \"A\" only component \"B\" or \"C\" are allowed.",
    "lineNumber": 25,
    "params": [
      {
        "nullable": null,
        "types": [
          "props"
        ],
        "spread": false,
        "optional": false,
        "name": "props",
        "description": "The properties"
      },
      {
        "nullable": null,
        "types": [
          "RectElement[]"
        ],
        "spread": false,
        "optional": false,
        "name": "props.not",
        "description": "A list of components that are \"not\" allowed"
      },
      {
        "nullable": null,
        "types": [
          "RectElement[]"
        ],
        "spread": false,
        "optional": false,
        "name": "props.only",
        "description": "A list of \"only\" those components that are allowed"
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "props.invalid",
        "description": "Set this parameter if the warning is about invalid content"
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "props.missing",
        "description": "Set this parameter if the warning is about missing content"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "props.type",
        "description": "The type that was used and caused this warning"
      }
    ],
    "ignore": true,
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 133,
    "kind": "file",
    "name": "@dekk/paging/src/index.js",
    "content": "import {Component} from 'react'\nimport PropTypes from 'prop-types'\n\n/**\n * This component does not render any content but adds paging via key\n * commands.\n *\n * If a slide has fragments this component will split the slide into\n * different steps.\n * @public\n */\nclass Paging extends Component {\n  /**\n   * @private\n   */\n  static get propTypes() {\n    return {\n      trigger: PropTypes.oneOf(['keyup', 'keydown']),\n      toNextFragment: PropTypes.func,\n      toPrevFragment: PropTypes.func,\n      toFragment: PropTypes.func,\n      toNextSlide: PropTypes.func,\n      toPrevSlide: PropTypes.func,\n      toSlide: PropTypes.func,\n      slideCount: PropTypes.number,\n      slideIndex: PropTypes.number,\n      fragmentCount: PropTypes.number,\n      fragmentIndex: PropTypes.number\n    }\n  }\n\n  /**\n   * @private\n   */\n  static get defaultProps() {\n    return {\n      trigger: 'keydown'\n    }\n  }\n\n  /**\n   * @public\n   * @param {Object} props\n   *   The properties\n   * @param {String} [props.trigger='keyup']\n   *   The event that triggers paging\n   * @param {number} props.slideCount\n   *   (Injected via Dekk)\n   * @param {number} props.slideIndex\n   *   (Injected via Dekk)\n   * @param {number} props.fragmentCount\n   *   (Injected via Dekk)\n   * @param {number} props.fragmentIndex\n   *   (Injected via Dekk)\n   * @param {number} props.fragmentOrder\n   *   (Injected via Dekk)\n   * @param {function} props.toFragment\n   *   (Injected via Dekk)\n   * @param {function} props.toSlide\n   *   (Injected via Dekk)\n   * @param {function} props.toNextFragment\n   *   (Injected via Dekk)\n   * @param {function} props.toPrevFragment\n   *   (Injected via Dekk)\n   * @param {function} props.toNextSlide\n   *   (Injected via Dekk)\n   * @param {function} props.toPrevSlide\n   *   (Injected via Dekk)\n   * @example\n   * import Deck, {Plugins} from '@dekk/deck'\n   * import Paging from '@dekk/paging'\n   *\n   * export default (\n   *   <Deck>\n   *     <Plugins>\n   *       <Paging/>\n   *     </Plugins>\n   *   </Deck>\n   * )\n   */\n  constructor(props) {\n    super(props)\n    this.goTo = this.goTo.bind(this)\n  }\n\n  /**\n   * Listen to events before we mount the component\n   * @private\n   */\n  componentWillMount() {\n    window.addEventListener(this.props.trigger, this.goTo)\n  }\n\n  /**\n   * Unlisten to events before we unmount the component\n   * @private\n   */\n  componentWillUnmount() {\n    window.removeEventListener(this.props.trigger, this.goTo)\n  }\n\n  /**\n   * Method to navigate to fragments or slides.\n   * Uses left and right arrow buttons to navigate\n   * @private\n   * @param  {Object} e\n   *   The event\n   * @param {number} e.which\n   *   The keyCode that has been triggered by the event\n   */\n  goTo({which}) {\n    const {\n      slideCount,\n      slideIndex,\n      fragmentIndex,\n      fragmentCount,\n      toNextSlide,\n      toPrevSlide,\n      toNextFragment,\n      toPrevFragment\n    } = this.props\n\n    const hasFragments = Boolean(fragmentCount)\n\n    const lastFragment = Math.max(0, fragmentCount - 1)\n\n    const previousFragment = Math.max(0, fragmentIndex - 1)\n    const nextFragment = Math.min(lastFragment, fragmentIndex + 1)\n\n    const lastSlide = Math.max(0, slideCount - 1)\n    const previousSlide = Math.max(0, slideIndex - 1)\n    const nextSlide = Math.min(lastSlide, slideIndex + 1)\n\n    const handleNext = () => {\n      if (hasFragments && nextFragment > fragmentIndex) {\n        toNextFragment()\n      } else if (nextSlide !== slideIndex) {\n        toNextSlide()\n      }\n    }\n\n    const handlePrev = () => {\n      if (hasFragments && previousFragment < fragmentIndex) {\n        toPrevFragment()\n      } else if (previousSlide !== slideIndex) {\n        toPrevSlide()\n      }\n    }\n\n    // Switch between left and right arrow buttons\n    switch (which) {\n      case 39:\n        handleNext()\n        break\n      case 37:\n        handlePrev()\n        break\n      default:\n        break\n    }\n  }\n\n  /**\n   * @private\n   */\n  render() {\n    return null\n  }\n}\n\nexport default Paging\n",
    "static": true,
    "longname": "/Users/greada/Documents/workspace/s2/dekk/@dekk/paging/src/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 134,
    "kind": "class",
    "name": "Paging",
    "memberof": "@dekk/paging/src/index.js",
    "static": true,
    "longname": "@dekk/paging/src/index.js~Paging",
    "access": "public",
    "export": true,
    "importPath": "@dekk/paging",
    "importStyle": "Paging",
    "description": "This component does not render any content but adds paging via key\ncommands.\n\nIf a slide has fragments this component will split the slide into\ndifferent steps.",
    "lineNumber": 12,
    "interface": false,
    "extends": [
      "react~Component"
    ]
  },
  {
    "__docId__": 135,
    "kind": "get",
    "name": "propTypes",
    "memberof": "@dekk/paging/src/index.js~Paging",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "@dekk/paging/src/index.js~Paging.propTypes",
    "access": "private",
    "description": "",
    "lineNumber": 16,
    "ignore": true,
    "type": {
      "types": [
        "{\"trigger\": *, \"toNextFragment\": *, \"toPrevFragment\": *, \"toFragment\": *, \"toNextSlide\": *, \"toPrevSlide\": *, \"toSlide\": *, \"slideCount\": *, \"slideIndex\": *, \"fragmentCount\": *, \"fragmentIndex\": *}"
      ]
    }
  },
  {
    "__docId__": 136,
    "kind": "get",
    "name": "defaultProps",
    "memberof": "@dekk/paging/src/index.js~Paging",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "@dekk/paging/src/index.js~Paging.defaultProps",
    "access": "private",
    "description": "",
    "lineNumber": 35,
    "ignore": true,
    "type": {
      "types": [
        "{\"trigger\": string}"
      ]
    }
  },
  {
    "__docId__": 137,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "@dekk/paging/src/index.js~Paging",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "@dekk/paging/src/index.js~Paging#constructor",
    "access": "public",
    "description": "",
    "examples": [
      "import Deck, {Plugins} from '@dekk/deck'\nimport Paging from '@dekk/paging'\n\nexport default (\n  <Deck>\n    <Plugins>\n      <Paging/>\n    </Plugins>\n  </Deck>\n)"
    ],
    "lineNumber": 81,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "props",
        "description": "The properties"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "'keyup'",
        "defaultRaw": "'keyup'",
        "name": "props.trigger",
        "description": "The event that triggers paging"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "props.slideCount",
        "description": "(Injected via Dekk)"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "props.slideIndex",
        "description": "(Injected via Dekk)"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "props.fragmentCount",
        "description": "(Injected via Dekk)"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "props.fragmentIndex",
        "description": "(Injected via Dekk)"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "props.fragmentOrder",
        "description": "(Injected via Dekk)"
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "props.toFragment",
        "description": "(Injected via Dekk)"
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "props.toSlide",
        "description": "(Injected via Dekk)"
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "props.toNextFragment",
        "description": "(Injected via Dekk)"
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "props.toPrevFragment",
        "description": "(Injected via Dekk)"
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "props.toNextSlide",
        "description": "(Injected via Dekk)"
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "props.toPrevSlide",
        "description": "(Injected via Dekk)"
      }
    ]
  },
  {
    "__docId__": 139,
    "kind": "method",
    "name": "componentWillMount",
    "memberof": "@dekk/paging/src/index.js~Paging",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "@dekk/paging/src/index.js~Paging#componentWillMount",
    "access": "private",
    "description": "Listen to events before we mount the component",
    "lineNumber": 90,
    "ignore": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 140,
    "kind": "method",
    "name": "componentWillUnmount",
    "memberof": "@dekk/paging/src/index.js~Paging",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "@dekk/paging/src/index.js~Paging#componentWillUnmount",
    "access": "private",
    "description": "Unlisten to events before we unmount the component",
    "lineNumber": 98,
    "ignore": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 141,
    "kind": "method",
    "name": "goTo",
    "memberof": "@dekk/paging/src/index.js~Paging",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "@dekk/paging/src/index.js~Paging#goTo",
    "access": "private",
    "description": "Method to navigate to fragments or slides.\nUses left and right arrow buttons to navigate",
    "lineNumber": 111,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "e",
        "description": "The event"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "e.which",
        "description": "The keyCode that has been triggered by the event"
      }
    ],
    "ignore": true,
    "return": null
  },
  {
    "__docId__": 142,
    "kind": "method",
    "name": "render",
    "memberof": "@dekk/paging/src/index.js~Paging",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "@dekk/paging/src/index.js~Paging#render",
    "access": "private",
    "description": "",
    "lineNumber": 166,
    "ignore": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 143,
    "kind": "file",
    "name": "@dekk/slide/src/index.js",
    "content": "import React, {Component} from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\nimport {Motion, spring} from 'react-motion'\n\n/**\n * A single slide.\n * Renders a slide inside a `react-motion` wrapper.\n * Assigns css-variables to allow various transitions\n *\n */\nclass Slide extends Component {\n  /**\n   * @private\n   */\n  static get childContextTypes() {\n    return {\n      fragmentHost: PropTypes.number\n    }\n  }\n\n  /**\n   * @private\n   */\n  static get propTypes() {\n    return {\n      isCurrent: PropTypes.bool,\n      isPrev: PropTypes.bool,\n      isNext: PropTypes.bool,\n      toPrev: PropTypes.bool,\n      fromPrev: PropTypes.bool,\n      toNext: PropTypes.bool,\n      fromNext: PropTypes.bool,\n      className: PropTypes.string,\n      children: PropTypes.node,\n      springSettings: PropTypes.shape({\n        stiffness: PropTypes.number,\n        damping: PropTypes.number,\n        precision: PropTypes.number\n      }),\n      animation: PropTypes.oneOfType([PropTypes.array, PropTypes.string]),\n      mixin: PropTypes.oneOfType([PropTypes.array, PropTypes.string]),\n      background: PropTypes.string,\n      slideIndex: PropTypes.number\n    }\n  }\n\n  /**\n   * @private\n   */\n  getChildContext() {\n    return {\n      fragmentHost: this.props.slideIndex\n    }\n  }\n\n  /**\n   * @private\n   */\n  render() {\n    const {isPrev, isNext} = this.props\n    const springStyle = {\n      time: spring(isPrev || isNext ? 1 : 0, {\n        ...this.props.springSettings\n      })\n    }\n    return (\n      <Motion style={springStyle}>\n        {({time}) => {\n          const style = {\n            '--time': time\n          }\n          return (\n            <StyledSlide\n              className={this.props.className}\n              style={style}\n              background={this.props.background}\n              mixin={this.props.mixin}\n              animation={this.props.animation}\n              isCurrent={this.props.isCurrent}\n              isNext={isNext}\n              isPrev={isPrev}\n              toPrev={this.props.toPrev}\n              toNext={this.props.toNext}\n              fromPrev={this.props.fromPrev}\n              fromNext={this.props.fromNext}>\n              {this.props.children}\n            </StyledSlide>\n          )\n        }}\n      </Motion>\n    )\n  }\n}\n\n/**\n * @private\n */\nconst SlideDirection = styled.div`\n  --direction: ${props => {\n    if (props.fromPrev) {\n      return -1\n    }\n    if (props.fromNext) {\n      return 1\n    }\n    if (props.toPrev) {\n      return -1\n    }\n    if (props.toNext) {\n      return 1\n    }\n    if (props.isPrev) {\n      return -1\n    }\n    if (props.isNext) {\n      return 1\n    }\n    if (props.isCurrent) {\n      return 0\n    }\n    return -1\n  }};\n  z-index: ${({isCurrent}) => (isCurrent ? 1 : 0)};\n`\n\n/**\n * @private\n */\nconst StyledSlide = styled(SlideDirection)`\n  position: absolute;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  overflow: hidden;\n  color: var(--slide-color, currentColor);\n  background: ${({background}) => background || 'none'};\n  background-size: cover;\n  ${({mixin}) => mixin || ''};\n  ${({animation}) =>\n    animation ||\n    `\n    transform: translate3d(calc(100% * var(--direction, -1) * var(--time, 1)), 0, 0);\n  `};\n`\n\nexport default Slide\n",
    "static": true,
    "longname": "/Users/greada/Documents/workspace/s2/dekk/@dekk/slide/src/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 144,
    "kind": "variable",
    "name": "SlideDirection",
    "memberof": "@dekk/slide/src/index.js",
    "static": true,
    "longname": "@dekk/slide/src/index.js~SlideDirection",
    "access": "private",
    "export": false,
    "importPath": "@dekk/slide",
    "importStyle": null,
    "description": "",
    "lineNumber": 99,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 145,
    "kind": "variable",
    "name": "StyledSlide",
    "memberof": "@dekk/slide/src/index.js",
    "static": true,
    "longname": "@dekk/slide/src/index.js~StyledSlide",
    "access": "private",
    "export": false,
    "importPath": "@dekk/slide",
    "importStyle": null,
    "description": "",
    "lineNumber": 130,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 146,
    "kind": "class",
    "name": "Slide",
    "memberof": "@dekk/slide/src/index.js",
    "static": true,
    "longname": "@dekk/slide/src/index.js~Slide",
    "access": "public",
    "export": true,
    "importPath": "@dekk/slide",
    "importStyle": "Slide",
    "description": "A single slide.\nRenders a slide inside a `react-motion` wrapper.\nAssigns css-variables to allow various transitions",
    "lineNumber": 12,
    "interface": false,
    "extends": [
      "react~Component"
    ]
  },
  {
    "__docId__": 147,
    "kind": "get",
    "name": "childContextTypes",
    "memberof": "@dekk/slide/src/index.js~Slide",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "@dekk/slide/src/index.js~Slide.childContextTypes",
    "access": "private",
    "description": "",
    "lineNumber": 16,
    "ignore": true,
    "type": {
      "types": [
        "{\"fragmentHost\": *}"
      ]
    }
  },
  {
    "__docId__": 148,
    "kind": "get",
    "name": "propTypes",
    "memberof": "@dekk/slide/src/index.js~Slide",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "@dekk/slide/src/index.js~Slide.propTypes",
    "access": "private",
    "description": "",
    "lineNumber": 25,
    "ignore": true,
    "type": {
      "types": [
        "{\"isCurrent\": *, \"isPrev\": *, \"isNext\": *, \"toPrev\": *, \"fromPrev\": *, \"toNext\": *, \"fromNext\": *, \"className\": *, \"children\": *, \"springSettings\": *, \"animation\": *, \"mixin\": *, \"background\": *, \"slideIndex\": *}"
      ]
    }
  },
  {
    "__docId__": 149,
    "kind": "method",
    "name": "getChildContext",
    "memberof": "@dekk/slide/src/index.js~Slide",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "@dekk/slide/src/index.js~Slide#getChildContext",
    "access": "private",
    "description": "",
    "lineNumber": 51,
    "ignore": true,
    "params": [],
    "return": {
      "types": [
        "{\"fragmentHost\": *}"
      ]
    }
  },
  {
    "__docId__": 150,
    "kind": "method",
    "name": "render",
    "memberof": "@dekk/slide/src/index.js~Slide",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "@dekk/slide/src/index.js~Slide#render",
    "access": "private",
    "description": "",
    "lineNumber": 60,
    "ignore": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 151,
    "kind": "file",
    "name": "@dekk/speaker-notes/src/index.js",
    "content": "import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\n\n/**\n * @public\n */\nconst Notes = styled.aside``\n\n/**\n * @private\n */\nNotes.propTypes = {\n  className: PropTypes.string,\n  children: PropTypes.node\n}\n\nexport default Notes\n",
    "static": true,
    "longname": "/Users/greada/Documents/workspace/s2/dekk/@dekk/speaker-notes/src/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 152,
    "kind": "variable",
    "name": "Notes",
    "memberof": "@dekk/speaker-notes/src/index.js",
    "static": true,
    "longname": "@dekk/speaker-notes/src/index.js~Notes",
    "access": "public",
    "export": true,
    "importPath": "@dekk/speaker-notes",
    "importStyle": "Notes",
    "description": "",
    "lineNumber": 8,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 153,
    "kind": "file",
    "name": "@dekk/store/src/index.js",
    "content": "import uuid from 'uuid/v4'\nimport {observable} from 'mobx'\n\n/**\n * @private\n */\nexport default class Store {\n  /**\n   * Store Id\n   * @type {String}\n   */\n  id = uuid()\n  /**\n   * Index of the currently active slide\n   * @type {number}\n   */\n  @observable slideIndex = 0\n  /**\n   * Order of the currently active fragment\n   * @type {number}\n   */\n  @observable fragmentOrder = 0\n  /**\n   * Index of the currently active fragment\n   * @type {number}\n   */\n  @observable fragmentIndex = 0\n  /**\n   * Direction of the slide movement (either -1, 0 or 1)\n   * @type {number}\n   */\n  @observable direction = 0\n\n  /**\n   * @private\n   * @param {Object} props\n   *   The properties\n   * @param {number} props.slideIndex\n   *   Initially active slideIndex\n   */\n  constructor(props) {\n    // Allow starting at slide `n`\n    this.slideIndex = props.slideIndex\n    /**\n     * A collection of hosts for fragments.\n     * Each slide is a host.\n     */\n    this.fragmentHosts = []\n    // Bind methods\n    this.toSlide = this.toSlide.bind(this)\n    this.toNextSlide = this.toNextSlide.bind(this)\n    this.toPrevSlide = this.toPrevSlide.bind(this)\n    this.toFragment = this.toFragment.bind(this)\n    this.toNextFragment = this.toNextFragment.bind(this)\n    this.toPrevFragment = this.toPrevFragment.bind(this)\n  }\n\n  /**\n   * Public methods.\n   *\n   * These methods can be used to modify the store.\n   */\n  get publicMethods() {\n    return {\n      toSlide: this.toSlide,\n      toNextSlide: this.toNextSlide,\n      toPrevSlide: this.toPrevSlide,\n      toFragment: this.toFragment,\n      toNextFragment: this.toNextFragment,\n      toPrevFragment: this.toPrevFragment\n    }\n  }\n\n  /**\n   * @private\n   */\n  toSlide(slideIndex) {\n    this.direction = slideIndex > this.slideIndex ? 1 : -1\n    this.slideIndex = slideIndex\n  }\n\n  /**\n   * @private\n   */\n  toNextSlide() {\n    this.toSlide(this.slideIndex + 1)\n    this.toFragment(0)\n  }\n\n  /**\n   * @private\n   */\n  toPrevSlide() {\n    const {length: prevFragmentCount = 0} = this.fragmentHosts[\n      this.slideIndex - 1\n    ]\n    const prevLastFragment = Math.max(0, prevFragmentCount - 1)\n    this.toSlide(this.slideIndex - 1)\n    this.toFragment(prevLastFragment)\n  }\n\n  /**\n   * @private\n   */\n  toFragment(fragmentIndex) {\n    const fragmentOrder = this.fragmentHosts[this.slideIndex][fragmentIndex]\n    this.fragmentOrder = fragmentOrder\n    this.fragmentIndex = fragmentIndex\n  }\n\n  /**\n   * @private\n   */\n  toNextFragment() {\n    this.toFragment(this.fragmentIndex + 1)\n  }\n\n  /**\n   * @private\n   */\n  toPrevFragment() {\n    this.toFragment(this.fragmentIndex - 1)\n  }\n}\n",
    "static": true,
    "longname": "/Users/greada/Documents/workspace/s2/dekk/@dekk/store/src/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 154,
    "kind": "class",
    "name": "Store",
    "memberof": "@dekk/store/src/index.js",
    "static": true,
    "longname": "@dekk/store/src/index.js~Store",
    "access": "private",
    "export": true,
    "importPath": "@dekk/store",
    "importStyle": "Store",
    "description": "",
    "lineNumber": 7,
    "interface": false,
    "ignore": true
  },
  {
    "__docId__": 155,
    "kind": "member",
    "name": "id",
    "memberof": "@dekk/store/src/index.js~Store",
    "static": false,
    "longname": "@dekk/store/src/index.js~Store#id",
    "access": "public",
    "description": "Store Id",
    "lineNumber": 12,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 156,
    "kind": "member",
    "name": "slideIndex",
    "memberof": "@dekk/store/src/index.js~Store",
    "static": false,
    "longname": "@dekk/store/src/index.js~Store#slideIndex",
    "access": "public",
    "description": "Index of the currently active slide",
    "lineNumber": 17,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    },
    "decorators": [
      {
        "name": "observable",
        "arguments": null
      }
    ]
  },
  {
    "__docId__": 157,
    "kind": "member",
    "name": "fragmentOrder",
    "memberof": "@dekk/store/src/index.js~Store",
    "static": false,
    "longname": "@dekk/store/src/index.js~Store#fragmentOrder",
    "access": "public",
    "description": "Order of the currently active fragment",
    "lineNumber": 22,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    },
    "decorators": [
      {
        "name": "observable",
        "arguments": null
      }
    ]
  },
  {
    "__docId__": 158,
    "kind": "member",
    "name": "fragmentIndex",
    "memberof": "@dekk/store/src/index.js~Store",
    "static": false,
    "longname": "@dekk/store/src/index.js~Store#fragmentIndex",
    "access": "public",
    "description": "Index of the currently active fragment",
    "lineNumber": 27,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    },
    "decorators": [
      {
        "name": "observable",
        "arguments": null
      }
    ]
  },
  {
    "__docId__": 159,
    "kind": "member",
    "name": "direction",
    "memberof": "@dekk/store/src/index.js~Store",
    "static": false,
    "longname": "@dekk/store/src/index.js~Store#direction",
    "access": "public",
    "description": "Direction of the slide movement (either -1, 0 or 1)",
    "lineNumber": 32,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    },
    "decorators": [
      {
        "name": "observable",
        "arguments": null
      }
    ]
  },
  {
    "__docId__": 160,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "@dekk/store/src/index.js~Store",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "@dekk/store/src/index.js~Store#constructor",
    "access": "private",
    "description": "",
    "lineNumber": 41,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "props",
        "description": "The properties"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "props.slideIndex",
        "description": "Initially active slideIndex"
      }
    ],
    "ignore": true
  },
  {
    "__docId__": 162,
    "kind": "member",
    "name": "fragmentHosts",
    "memberof": "@dekk/store/src/index.js~Store",
    "static": false,
    "longname": "@dekk/store/src/index.js~Store#fragmentHosts",
    "access": "public",
    "description": "A collection of hosts for fragments.\nEach slide is a host.",
    "lineNumber": 48,
    "type": {
      "types": [
        "*[]"
      ]
    }
  },
  {
    "__docId__": 169,
    "kind": "get",
    "name": "publicMethods",
    "memberof": "@dekk/store/src/index.js~Store",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "@dekk/store/src/index.js~Store#publicMethods",
    "access": "public",
    "description": "Public methods.\n\nThese methods can be used to modify the store.",
    "lineNumber": 63,
    "type": {
      "types": [
        "{\"toSlide\": *, \"toNextSlide\": *, \"toPrevSlide\": *, \"toFragment\": *, \"toNextFragment\": *, \"toPrevFragment\": *}"
      ]
    }
  },
  {
    "__docId__": 170,
    "kind": "method",
    "name": "toSlide",
    "memberof": "@dekk/store/src/index.js~Store",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "@dekk/store/src/index.js~Store#toSlide",
    "access": "private",
    "description": "",
    "lineNumber": 77,
    "ignore": true,
    "params": [
      {
        "name": "slideIndex",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 173,
    "kind": "method",
    "name": "toNextSlide",
    "memberof": "@dekk/store/src/index.js~Store",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "@dekk/store/src/index.js~Store#toNextSlide",
    "access": "private",
    "description": "",
    "lineNumber": 85,
    "ignore": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 174,
    "kind": "method",
    "name": "toPrevSlide",
    "memberof": "@dekk/store/src/index.js~Store",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "@dekk/store/src/index.js~Store#toPrevSlide",
    "access": "private",
    "description": "",
    "lineNumber": 93,
    "ignore": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 175,
    "kind": "method",
    "name": "toFragment",
    "memberof": "@dekk/store/src/index.js~Store",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "@dekk/store/src/index.js~Store#toFragment",
    "access": "private",
    "description": "",
    "lineNumber": 105,
    "ignore": true,
    "params": [
      {
        "name": "fragmentIndex",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 178,
    "kind": "method",
    "name": "toNextFragment",
    "memberof": "@dekk/store/src/index.js~Store",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "@dekk/store/src/index.js~Store#toNextFragment",
    "access": "private",
    "description": "",
    "lineNumber": 114,
    "ignore": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 179,
    "kind": "method",
    "name": "toPrevFragment",
    "memberof": "@dekk/store/src/index.js~Store",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "@dekk/store/src/index.js~Store#toPrevFragment",
    "access": "private",
    "description": "",
    "lineNumber": 121,
    "ignore": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 180,
    "kind": "file",
    "name": "@dekk/text/src/bold.js",
    "content": "import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\n\n/**\n * @public\n */\nconst Bold = styled.strong`\n  font-weight: bold;\n  ${props =>\n    props.highlight ? 'color: var(--highlight-color, inherit);' : ''};\n`\n\n/**\n * @private\n */\nBold.propTypes = {\n  className: PropTypes.string,\n  highlight: PropTypes.bool,\n  children: PropTypes.node\n}\n\n/**\n * @private\n */\nBold.displayName = 'Bold'\n\nexport default Bold\n",
    "static": true,
    "longname": "/Users/greada/Documents/workspace/s2/dekk/@dekk/text/src/bold.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 181,
    "kind": "variable",
    "name": "Bold",
    "memberof": "@dekk/text/src/bold.js",
    "static": true,
    "longname": "@dekk/text/src/bold.js~Bold",
    "access": "public",
    "export": true,
    "importPath": "@dekk/text",
    "importStyle": "Bold",
    "description": "",
    "lineNumber": 8,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 182,
    "kind": "file",
    "name": "@dekk/text/src/center.js",
    "content": "import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\n\n/**\n * @public\n */\nconst Center = styled.div`\n  text-align: center;\n`\n\n/**\n * @private\n */\nCenter.propTypes = {\n  className: PropTypes.string,\n  children: PropTypes.node\n}\n\n/**\n * @private\n */\nCenter.displayName = 'Center'\n\nexport default Center\n",
    "static": true,
    "longname": "/Users/greada/Documents/workspace/s2/dekk/@dekk/text/src/center.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 183,
    "kind": "variable",
    "name": "Center",
    "memberof": "@dekk/text/src/center.js",
    "static": true,
    "longname": "@dekk/text/src/center.js~Center",
    "access": "public",
    "export": true,
    "importPath": "@dekk/text",
    "importStyle": "Center",
    "description": "",
    "lineNumber": 8,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 184,
    "kind": "file",
    "name": "@dekk/text/src/code.js",
    "content": "import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\nimport SyntaxHighlighter from 'react-syntax-highlighter'\nimport * as colorSchemes from 'react-syntax-highlighter/styles/hljs'\n\n/**\n * @private\n */\nconst RawCode = props => {\n  return (\n    <SyntaxHighlighter\n      className={props.className}\n      language={props.language}\n      style={props.style}>\n      {props.children}\n    </SyntaxHighlighter>\n  )\n}\n\n/**\n * @bublic\n */\nconst Code = styled(RawCode)`\n  font-size: var(--code-font-size, 1em);\n`\n\n/**\n * @private\n */\nCode.propTypes = {\n  style: PropTypes.object,\n  language: PropTypes.string,\n  className: PropTypes.string,\n  className: PropTypes.string,\n  children: PropTypes.string\n}\n\n/**\n * @private\n */\nCode.displayName = 'Code'\n\nexport {colorSchemes}\nexport default Code\n",
    "static": true,
    "longname": "/Users/greada/Documents/workspace/s2/dekk/@dekk/text/src/code.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 185,
    "kind": "function",
    "name": "RawCode",
    "memberof": "@dekk/text/src/code.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "@dekk/text/src/code.js~RawCode",
    "access": "private",
    "export": false,
    "importPath": "@dekk/text",
    "importStyle": null,
    "description": "",
    "lineNumber": 10,
    "ignore": true,
    "params": [
      {
        "name": "props",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 186,
    "kind": "variable",
    "name": "Code",
    "memberof": "@dekk/text/src/code.js",
    "static": true,
    "longname": "@dekk/text/src/code.js~Code",
    "access": "public",
    "export": true,
    "importPath": "@dekk/text",
    "importStyle": "Code",
    "description": "",
    "lineNumber": 24,
    "unknown": [
      {
        "tagName": "@bublic",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 187,
    "kind": "file",
    "name": "@dekk/text/src/index.js",
    "content": "import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\n\nexport {default as Title} from './title'\nexport {default as Subtitle} from './subtitle'\nexport {default as Code, colorSchemes} from './code'\nexport {default as Quote} from './quote'\nexport {default as Center} from './center'\nexport {default as Bold} from './bold'\nexport {default as Uppercase} from './uppercase'\n\n/**\n * @public\n */\nconst Text = styled.p`\n  padding: 0;\n`\n/**\n * @private\n */\nText.propTypes = {\n  className: PropTypes.string,\n  children: PropTypes.node\n}\n\n/**\n * @private\n */\nText.displayName = 'Text'\n\nexport default Text\n",
    "static": true,
    "longname": "/Users/greada/Documents/workspace/s2/dekk/@dekk/text/src/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 188,
    "kind": "variable",
    "name": "Text",
    "memberof": "@dekk/text/src/index.js",
    "static": true,
    "longname": "@dekk/text/src/index.js~Text",
    "access": "public",
    "export": true,
    "importPath": "@dekk/text",
    "importStyle": "Text",
    "description": "",
    "lineNumber": 16,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 189,
    "kind": "file",
    "name": "@dekk/text/src/quote.js",
    "content": "import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\n\n/**\n * @public\n */\nconst Quote = props => (\n  <Figure>\n    <BlockQuote className={quote} cite={props.cite}>\n      {props.children}\n    </BlockQuote>\n    <figcaption>{props.author}</figcaption>\n  </Figure>\n)\n\n/**\n * @private\n */\nconst BlockQuote = styled.blockquote`\n  margin: 0;\n`\n\n/**\n * @private\n */\nconst Figure = styled.figure`\n  margin: 0;\n`\n\n/**\n * @private\n */\nQuote.propTypes = {\n  cite: PropTypes.string,\n  author: PropTypes.node,\n  className: PropTypes.string,\n  children: PropTypes.node\n}\n\n/**\n * @private\n */\nQuote.displayName = 'Quote'\n\nexport default Quote\n",
    "static": true,
    "longname": "/Users/greada/Documents/workspace/s2/dekk/@dekk/text/src/quote.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 190,
    "kind": "variable",
    "name": "BlockQuote",
    "memberof": "@dekk/text/src/quote.js",
    "static": true,
    "longname": "@dekk/text/src/quote.js~BlockQuote",
    "access": "private",
    "export": false,
    "importPath": "@dekk/text",
    "importStyle": null,
    "description": "",
    "lineNumber": 20,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 191,
    "kind": "variable",
    "name": "Figure",
    "memberof": "@dekk/text/src/quote.js",
    "static": true,
    "longname": "@dekk/text/src/quote.js~Figure",
    "access": "private",
    "export": false,
    "importPath": "@dekk/text",
    "importStyle": null,
    "description": "",
    "lineNumber": 27,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 192,
    "kind": "function",
    "name": "Quote",
    "memberof": "@dekk/text/src/quote.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "@dekk/text/src/quote.js~Quote",
    "access": "public",
    "export": true,
    "importPath": "@dekk/text",
    "importStyle": "Quote",
    "description": "",
    "lineNumber": 8,
    "params": [
      {
        "name": "props",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 193,
    "kind": "file",
    "name": "@dekk/text/src/subtitle.js",
    "content": "import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\n\n/**\n * @public\n */\nconst Subtitle = styled.h2`\n  margin: 0;\n  font-size: var(--subtitle-font-size, 2em);\n  text-align: center;\n`\n\n/**\n * @private\n */\nSubtitle.propTypes = {\n  className: PropTypes.string,\n  children: PropTypes.node\n}\n\n/**\n * @private\n */\nSubtitle.displayName = 'Subtitle'\n\nexport default Subtitle\n",
    "static": true,
    "longname": "/Users/greada/Documents/workspace/s2/dekk/@dekk/text/src/subtitle.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 194,
    "kind": "variable",
    "name": "Subtitle",
    "memberof": "@dekk/text/src/subtitle.js",
    "static": true,
    "longname": "@dekk/text/src/subtitle.js~Subtitle",
    "access": "public",
    "export": true,
    "importPath": "@dekk/text",
    "importStyle": "Subtitle",
    "description": "",
    "lineNumber": 8,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 195,
    "kind": "file",
    "name": "@dekk/text/src/title.js",
    "content": "import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\n\n/**\n * @public\n */\nconst Title = styled.h1`\n  margin: 0;\n  font-size: var(--title-font-size, 4em);\n  text-align: center;\n`\n\n/**\n * @private\n */\nTitle.propTypes = {\n  className: PropTypes.string,\n  children: PropTypes.node\n}\n\n/**\n * @private\n */\nTitle.displayName = 'Title'\n\nexport default Title\n",
    "static": true,
    "longname": "/Users/greada/Documents/workspace/s2/dekk/@dekk/text/src/title.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 196,
    "kind": "variable",
    "name": "Title",
    "memberof": "@dekk/text/src/title.js",
    "static": true,
    "longname": "@dekk/text/src/title.js~Title",
    "access": "public",
    "export": true,
    "importPath": "@dekk/text",
    "importStyle": "Title",
    "description": "",
    "lineNumber": 8,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 197,
    "kind": "file",
    "name": "@dekk/text/src/uppercase.js",
    "content": "import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\n\n/**\n * @public\n */\nconst Uppercase = styled.span`\n  text-transform: uppercase;\n`\n\n/**\n * @private\n */\nUppercase.propTypes = {\n  className: PropTypes.string,\n  children: PropTypes.node\n}\n\n/**\n * @private\n */\nUppercase.displayName = 'Uppercase'\n\nexport default Uppercase\n",
    "static": true,
    "longname": "/Users/greada/Documents/workspace/s2/dekk/@dekk/text/src/uppercase.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 198,
    "kind": "variable",
    "name": "Uppercase",
    "memberof": "@dekk/text/src/uppercase.js",
    "static": true,
    "longname": "@dekk/text/src/uppercase.js~Uppercase",
    "access": "public",
    "export": true,
    "importPath": "@dekk/text",
    "importStyle": "Uppercase",
    "description": "",
    "lineNumber": 8,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 199,
    "kind": "file",
    "name": "@dekk/url/src/index.js",
    "content": "import {Component} from 'react'\nimport PropTypes from 'prop-types'\n\n/**\n * @private\n */\nexport const writeHash = (slideIndex = 0, fragmentIndex = 0) => {\n  window.location.hash = `#!/${slideIndex}/${fragmentIndex}/`\n}\n\n/**\n * @private\n */\nexport const writeQuery = (slideIndex = 0, fragmentIndex = 0, old = '') => {\n  const oldQuery = window.location.search\n    .split(/[\\?&]/)\n    .filter(x => x !== '' && !x.match(/(page|fragment)/))\n    .join('&')\n  history.pushState(\n    {page: slideIndex, fragment: fragmentIndex},\n    `page ${slideIndex}, fragment ${fragmentIndex}`,\n    `?page=${slideIndex}&fragment=${fragmentIndex}${\n      oldQuery ? `&${oldQuery}` : ''\n    }`\n  )\n}\n\n/**\n * @public\n */\nclass Url extends Component {\n  /**\n   * @private\n   */\n  static get propTypes() {\n    return {\n      type: PropTypes.oneOf(['hash', 'query']),\n      slideIndex: PropTypes.number,\n      fragmentIndex: PropTypes.number\n    }\n  }\n\n  /**\n   * @private\n   */\n  static get defaultProps() {\n    return {\n      type: 'hash',\n      slideIndex: 0,\n      fragmentIndex: 0\n    }\n  }\n\n  /**\n   * @public\n   * @param {Object} props\n   *   The properties\n   * @param {String} [props.type='hash']\n   *   Either `hash` or `query` to enable hash(bang) or search query URLs\n   * @param {number} props.slideIndex\n   *   (Injected via Dekk)\n   * @param {number} props.fragmentCount\n   *   (Injected via Dekk)\n   * @param {number} props.fragmentIndex\n   *   (Injected via Dekk)\n   * @param {number} props.fragmentOrder\n   *   (Injected via Dekk)\n   * @param {function} props.toFragment\n   *   (Injected via Dekk)\n   * @param {function} props.toSlide\n   *   (Injected via Dekk)\n   * @param {function} props.toNextFragment\n   *   (Injected via Dekk)\n   * @param {function} props.toPrevFragment\n   *   (Injected via Dekk)\n   * @param {function} props.toNextSlide\n   *   (Injected via Dekk)\n   * @param {function} props.toPrevSlide\n   *   (Injected via Dekk)\n   * @example\n   * import Deck, {Plugins} from '@dekk/deck'\n   * import Url from '@dekk/url'\n   *\n   * export default (\n   *   <Deck>\n   *     <Plugins>\n   *       <Url/>\n   *     </Plugins>\n   *   </Deck>\n   * )\n   */\n  constructor(props) {\n    super(props)\n  }\n\n  /**\n   * @private\n   */\n  componentDidMount() {\n    this[this.props.type](window.location.href)\n  }\n\n  /**\n   * @private\n   */\n  hash(url) {\n    const {hash = ''} = new URL(url)\n    const [, slideIndex = 0, fragmentIndex = 0] = hash.split('/')\n    this.toSlide(slideIndex)\n    this.toFragment(fragmentIndex)\n  }\n\n  /**\n   * @private\n   */\n  query(url) {\n    const {search = ''} = new URL(url)\n    const parts = search.split(/[\\?&]/).filter(Boolean)\n    const {page: slideIndex = 0, fragment: fragmentIndex = 0} = parts.reduce(\n      (a, b) => {\n        const [key, value] = b.split('=')\n        return {...a, [key]: value}\n      },\n      {}\n    )\n    this.toSlide(slideIndex)\n    this.toFragment(fragmentIndex)\n  }\n\n  /**\n   * @private\n   */\n  toFragment(fragmentIndex) {\n    this.props.toFragment(parseInt(fragmentIndex, 10))\n  }\n\n  /**\n   * @private\n   */\n  toSlide(slideIndex) {\n    this.props.toSlide(parseInt(slideIndex, 10))\n  }\n\n  /**\n   * @private\n   */\n  componentWillReceiveProps({slideIndex, fragmentIndex}) {\n    switch (this.props.type) {\n      case 'hash':\n        writeHash(slideIndex, fragmentIndex)\n        break\n      case 'query':\n        writeQuery(slideIndex, fragmentIndex)\n        break\n      default:\n        break\n    }\n  }\n\n  /**\n   * @private\n   */\n  render() {\n    return null\n  }\n}\n\nexport default Url\n",
    "static": true,
    "longname": "/Users/greada/Documents/workspace/s2/dekk/@dekk/url/src/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 200,
    "kind": "function",
    "name": "writeHash",
    "memberof": "@dekk/url/src/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "@dekk/url/src/index.js~writeHash",
    "access": "private",
    "export": true,
    "importPath": "@dekk/url",
    "importStyle": "{writeHash}",
    "description": "",
    "lineNumber": 7,
    "ignore": true,
    "params": [
      {
        "name": "slideIndex",
        "optional": true,
        "types": [
          "number"
        ],
        "defaultRaw": 0,
        "defaultValue": "0"
      },
      {
        "name": "fragmentIndex",
        "optional": true,
        "types": [
          "number"
        ],
        "defaultRaw": 0,
        "defaultValue": "0"
      }
    ],
    "return": null
  },
  {
    "__docId__": 201,
    "kind": "function",
    "name": "writeQuery",
    "memberof": "@dekk/url/src/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "@dekk/url/src/index.js~writeQuery",
    "access": "private",
    "export": true,
    "importPath": "@dekk/url",
    "importStyle": "{writeQuery}",
    "description": "",
    "lineNumber": 14,
    "ignore": true,
    "params": [
      {
        "name": "slideIndex",
        "optional": true,
        "types": [
          "number"
        ],
        "defaultRaw": 0,
        "defaultValue": "0"
      },
      {
        "name": "fragmentIndex",
        "optional": true,
        "types": [
          "number"
        ],
        "defaultRaw": 0,
        "defaultValue": "0"
      },
      {
        "name": "old",
        "optional": true,
        "types": [
          "string"
        ],
        "defaultRaw": "",
        "defaultValue": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 202,
    "kind": "class",
    "name": "Url",
    "memberof": "@dekk/url/src/index.js",
    "static": true,
    "longname": "@dekk/url/src/index.js~Url",
    "access": "public",
    "export": true,
    "importPath": "@dekk/url",
    "importStyle": "Url",
    "description": "",
    "lineNumber": 31,
    "interface": false,
    "extends": [
      "react~Component"
    ]
  },
  {
    "__docId__": 203,
    "kind": "get",
    "name": "propTypes",
    "memberof": "@dekk/url/src/index.js~Url",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "@dekk/url/src/index.js~Url.propTypes",
    "access": "private",
    "description": "",
    "lineNumber": 35,
    "ignore": true,
    "type": {
      "types": [
        "{\"type\": *, \"slideIndex\": *, \"fragmentIndex\": *}"
      ]
    }
  },
  {
    "__docId__": 204,
    "kind": "get",
    "name": "defaultProps",
    "memberof": "@dekk/url/src/index.js~Url",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "@dekk/url/src/index.js~Url.defaultProps",
    "access": "private",
    "description": "",
    "lineNumber": 46,
    "ignore": true,
    "type": {
      "types": [
        "{\"type\": string, \"slideIndex\": *, \"fragmentIndex\": *}"
      ]
    }
  },
  {
    "__docId__": 205,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "@dekk/url/src/index.js~Url",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "@dekk/url/src/index.js~Url#constructor",
    "access": "public",
    "description": "",
    "examples": [
      "import Deck, {Plugins} from '@dekk/deck'\nimport Url from '@dekk/url'\n\nexport default (\n  <Deck>\n    <Plugins>\n      <Url/>\n    </Plugins>\n  </Deck>\n)"
    ],
    "lineNumber": 92,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "props",
        "description": "The properties"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "'hash'",
        "defaultRaw": "'hash'",
        "name": "props.type",
        "description": "Either `hash` or `query` to enable hash(bang) or search query URLs"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "props.slideIndex",
        "description": "(Injected via Dekk)"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "props.fragmentCount",
        "description": "(Injected via Dekk)"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "props.fragmentIndex",
        "description": "(Injected via Dekk)"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "props.fragmentOrder",
        "description": "(Injected via Dekk)"
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "props.toFragment",
        "description": "(Injected via Dekk)"
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "props.toSlide",
        "description": "(Injected via Dekk)"
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "props.toNextFragment",
        "description": "(Injected via Dekk)"
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "props.toPrevFragment",
        "description": "(Injected via Dekk)"
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "props.toNextSlide",
        "description": "(Injected via Dekk)"
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "props.toPrevSlide",
        "description": "(Injected via Dekk)"
      }
    ]
  },
  {
    "__docId__": 206,
    "kind": "method",
    "name": "componentDidMount",
    "memberof": "@dekk/url/src/index.js~Url",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "@dekk/url/src/index.js~Url#componentDidMount",
    "access": "private",
    "description": "",
    "lineNumber": 99,
    "ignore": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 207,
    "kind": "method",
    "name": "hash",
    "memberof": "@dekk/url/src/index.js~Url",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "@dekk/url/src/index.js~Url#hash",
    "access": "private",
    "description": "",
    "lineNumber": 106,
    "ignore": true,
    "params": [
      {
        "name": "url",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 208,
    "kind": "method",
    "name": "query",
    "memberof": "@dekk/url/src/index.js~Url",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "@dekk/url/src/index.js~Url#query",
    "access": "private",
    "description": "",
    "lineNumber": 116,
    "ignore": true,
    "params": [
      {
        "name": "url",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 209,
    "kind": "method",
    "name": "toFragment",
    "memberof": "@dekk/url/src/index.js~Url",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "@dekk/url/src/index.js~Url#toFragment",
    "access": "private",
    "description": "",
    "lineNumber": 133,
    "ignore": true,
    "params": [
      {
        "name": "fragmentIndex",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 210,
    "kind": "method",
    "name": "toSlide",
    "memberof": "@dekk/url/src/index.js~Url",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "@dekk/url/src/index.js~Url#toSlide",
    "access": "private",
    "description": "",
    "lineNumber": 140,
    "ignore": true,
    "params": [
      {
        "name": "slideIndex",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 211,
    "kind": "method",
    "name": "componentWillReceiveProps",
    "memberof": "@dekk/url/src/index.js~Url",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "@dekk/url/src/index.js~Url#componentWillReceiveProps",
    "access": "private",
    "description": "",
    "lineNumber": 147,
    "ignore": true,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"slideIndex\": *, \"fragmentIndex\": *}"
        ],
        "defaultRaw": {
          "slideIndex": null,
          "fragmentIndex": null
        },
        "defaultValue": "{\"slideIndex\":null,\"fragmentIndex\":null}"
      }
    ],
    "return": null
  },
  {
    "__docId__": 212,
    "kind": "method",
    "name": "render",
    "memberof": "@dekk/url/src/index.js~Url",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "@dekk/url/src/index.js~Url#render",
    "access": "private",
    "description": "",
    "lineNumber": 163,
    "ignore": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 213,
    "kind": "file",
    "name": "@dekk/utils/src/index.js",
    "content": "export * from './range'\n",
    "static": true,
    "longname": "/Users/greada/Documents/workspace/s2/dekk/@dekk/utils/src/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 214,
    "kind": "file",
    "name": "@dekk/utils/src/range.js",
    "content": "/**\n * @private\n */\nexport const range = (n, max, min = 0) => n >= min && n <= max\n",
    "static": true,
    "longname": "/Users/greada/Documents/workspace/s2/dekk/@dekk/utils/src/range.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 215,
    "kind": "function",
    "name": "range",
    "memberof": "@dekk/utils/src/range.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "@dekk/utils/src/range.js~range",
    "access": "private",
    "export": true,
    "importPath": "@dekk/utils",
    "importStyle": "{range}",
    "description": "",
    "lineNumber": 4,
    "ignore": true,
    "params": [
      {
        "name": "n",
        "types": [
          "*"
        ]
      },
      {
        "name": "max",
        "types": [
          "*"
        ]
      },
      {
        "name": "min",
        "optional": true,
        "types": [
          "number"
        ],
        "defaultRaw": 0,
        "defaultValue": "0"
      }
    ],
    "return": null
  },
  {
    "kind": "index",
    "content": "# Dekk\n\n<p align=\"center\"><img width=\"300\" src=\"https://raw.githubusercontent.com/sinnerschrader/dekk/master/resources/logo.png\" alt=\"Dekk logo\"/></p>\n\nDekk is a presentation tool written in React.js. It can be used and\nconfigured via several available packages.\n\n\n[![GitHub license](https://img.shields.io/badge/license-MIT-blue.svg?style=flat-square)](https://raw.githubusercontent.com/sinnerschrader/dekk/master/LICENSE)\n[![GitHub issues](https://img.shields.io/github/issues/sinnerschrader/dekk.svg?style=flat-square)](https://github.com/sinnerschrader/dekk/issues)\n\n[![Esdoc](https://sinnerschrader.github.io/dekk/api/badge.svg)](https://sinnerschrader.github.io/dekk/api)\n\n\n[![Travis branch](https://img.shields.io/travis/sinnerschrader/dekk/master.svg?style=flat-square)](https://travis-ci.org/sinnerschrader/dekk)\n[![bitHound](https://img.shields.io/bithound/code/github/sinnerschrader/dekk.svg?style=flat-square)](https://www.bithound.io/github/sinnerschrader/dekk)\n[![bitHound](https://img.shields.io/bithound/devDependencies/github/sinnerschrader/dekk.svg?style=flat-square)](https://www.bithound.io/github/sinnerschrader/dekk)\n\n\n\n[![yarn](https://img.shields.io/badge/yarn-friendly-2c8ebb.svg?style=flat-square)](https://yarnpkg.com/)\n[![commitlint](https://img.shields.io/badge/commitlint-enabled-44aa44.svg?style=flat-square)](https://github.com/marionebl/commitlint)\n\n\n## Links\n* [Demo](https://sinnerschrader.github.io/dekk/)\n* [Documentation](https://sinnerschrader.github.io/dekk/api/)\n  * [Installation](https://sinnerschrader.github.io/dekk/api/manual/installation.html)\n  * [Usage](https://sinnerschrader.github.io/dekk/api/manual/usage.html)\n\n\n## Dependencies\n\n* [react](https://github.com/facebook/react)\n* [react-motion](https://github.com/chenglou/react-motion)\n* [mobx-react](https://github.com/mobxjs/mobx-react)\n* [styled-components](https://github.com/styled-components/styled-components)\n\n\n© Copyright 2018 [Gregor Adams](https://github.com/pixelass)  \nProudly powered by [Sinnerschrader](https://sinnerschrader.com)\n",
    "longname": "/Users/greada/Documents/workspace/s2/dekk/README.md",
    "name": "./README.md",
    "static": true,
    "access": "public"
  },
  {
    "kind": "packageJSON",
    "content": "{\n  \"name\": \"dekk\",\n  \"version\": \"1.0.0-0\",\n  \"private\": true,\n  \"description\": \"A presentation tool written in react.js\",\n  \"license\": \"MIT\",\n  \"author\": \"Gregor Adams <greg@pixelass.com>\",\n  \"repository\": \"git@github.com:sinnerschrader/dekk.git\",\n  \"scripts\": {\n    \"babel\": \"lerna run babel\",\n    \"babel:watch\": \"lerna run babel:watch --parallel\",\n    \"bootstrap\": \"lerna bootstrap\",\n    \"build\": \"cross-env NODE_ENV=production webpack\",\n    \"clean\": \"lerna clean\",\n    \"commitmsg\": \"commitlint -e $GIT_PARAMS\",\n    \"develop\": \"npm-run-all --parallel babel:watch watch\",\n    \"docgen\": \"esdoc\",\n    \"docs\": \"open docs/api/index.html\",\n    \"format:js\": \"lerna run format:js\",\n    \"test\": \"lerna run test\",\n    \"watch\": \"webpack-dev-server\",\n    \"prepush\": \"yarn test\",\n    \"prepublish\": \"yarn babel\",\n    \"publish\": \"lerna publish --conventional-commits\",\n    \"publish:preview\": \"yarn babel && lerna publish --cd-version=prerelease --conventional-commits\"\n  },\n  \"devDependencies\": {\n    \"@commitlint/cli\": \"^6.0.2\",\n    \"@commitlint/config-conventional\": \"^6.0.2\",\n    \"babel-cli\": \"^6.26.0\",\n    \"babel-core\": \"^6.26.0\",\n    \"babel-loader\": \"^7.1.2\",\n    \"babel-plugin-styled-components\": \"^1.5.0\",\n    \"babel-plugin-transform-class-properties\": \"^6.24.1\",\n    \"babel-plugin-transform-decorators-legacy\": \"^1.3.4\",\n    \"babel-preset-env\": \"^1.6.1\",\n    \"babel-preset-react\": \"^6.24.1\",\n    \"babel-preset-stage-2\": \"^6.24.1\",\n    \"cross-env\": \"^5.1.3\",\n    \"esdoc\": \"^1.0.4\",\n    \"esdoc-brand-plugin\": \"^1.0.0\",\n    \"esdoc-custom-theme\": \"^1.0.0-rc1.0\",\n    \"esdoc-ecmascript-proposal-plugin\": \"^1.0.0\",\n    \"esdoc-importpath-plugin\": \"^1.0.1\",\n    \"esdoc-inject-style-plugin\": \"^1.0.0\",\n    \"esdoc-jsx-plugin\": \"^1.0.0\",\n    \"esdoc-lint-plugin\": \"1.0.1\",\n    \"esdoc-publish-html-plugin\": \"^1.1.0\",\n    \"esdoc-react-plugin\": \"^1.0.1\",\n    \"esdoc-standard-plugin\": \"^1.0.0\",\n    \"favicons-webpack-plugin\": \"^0.0.7\",\n    \"html-webpack-harddisk-plugin\": \"^0.1.0\",\n    \"html-webpack-plugin\": \"^2.30.1\",\n    \"husky\": \"^0.14.3\",\n    \"lerna\": \"^2.5.1\",\n    \"npm-run-all\": \"^4.1.2\",\n    \"react\": \"^16.2.0\",\n    \"react-dom\": \"^16.2.0\",\n    \"styled-components\": \"^3.0.2\",\n    \"webpack\": \"^3.10.0\",\n    \"webpack-dev-server\": \"^2.11.1\"\n  },\n  \"workspaces\": [\n    \"@dekk/*\"\n  ]\n}\n",
    "longname": "/Users/greada/Documents/workspace/s2/dekk/package.json",
    "name": "package.json",
    "static": true,
    "access": "public"
  },
  {
    "kind": "manualIndex",
    "globalIndex": true,
    "content": "# Dekk\n\nDekk is a presentation tool written in React.js.  \nIt is build with styled-components and mobX.\n",
    "longname": "/Users/greada/Documents/workspace/s2/dekk/.manual/index.md",
    "name": "./.manual/index.md",
    "static": true,
    "access": "public"
  },
  {
    "kind": "manualAsset",
    "longname": "/Users/greada/Documents/workspace/s2/dekk/.manual/assets",
    "name": "./.manual/assets",
    "static": true,
    "access": "public"
  },
  {
    "kind": "manual",
    "longname": "/Users/greada/Documents/workspace/s2/dekk/.manual/installation.md",
    "name": "./.manual/installation.md",
    "content": "# Installation\n\nDekk is a monorepo and all of its packages can be found under the namespace [@dekk](https://www.npmjs.com/org/dekk)\n\n## Available packages\n\n### Deck (root)\n\n```shell\nyarn add @dekk/deck\n```\n\n### Master Slides\n\n```shell\nyarn add @dekk/master\n```\n\n### Text Elements\n\n```shell\nyarn add @dekk/text\n```\n\n### Image Elements\n\n```shell\nyarn add @dekk/image\n```\n\n### Fragments\n\n```shell\nyarn add @dekk/fragment\n```\n\n### Speaker notes\n\n```shell\nyarn add @dekk/speaker-notes\n```\n",
    "static": true,
    "access": "public"
  },
  {
    "kind": "manual",
    "longname": "/Users/greada/Documents/workspace/s2/dekk/.manual/usage.md",
    "name": "./.manual/usage.md",
    "content": "# Usage\n\n## Creating a Deck\n\nTo create a Deck you need two core packages, \"Deck\" and \"Slide\".\n\n```jsx\nimport React from 'react'\nimport Deck from '@dekk/deck'\nimport Slide from '@dekk/slide'\n\nexport default (\n  <Deck>\n    <Slide> 1 </Slide>\n    <Slide> 2 </Slide>\n    <Slide> 3 </Slide>\n  </Deck>\n)\n```\n\n## Page fragments\n\nA slide can have multiple fragments which are activated before the next slide.\n\n```jsx\nimport React from 'react'\nimport Slide from '@dekk/slide'\nimport Fragment from '@dekk/fragment'\n\nexport default (\n  <Slide>\n    <Fragment order={1}> 1 </Fragment>\n    <Fragment order={2}> 2 </Fragment>\n    <Fragment order={3}> 3 </Fragment>\n  </Slide>\n)\n```\n\n### Fragment order\n\nEach fragment order adds a step to the slide, while multiple fragments can appear at once.\nThe order is used to sort the fragments. \n\n> Pro Tip: You can create blocks of 20 to make changes easier.\n\n```jsx\nimport React from 'react'\nimport Slide from '@dekk/slide'\nimport Fragment from '@dekk/fragment'\n\nexport default (\n  <Slide>\n    <Fragment order={21}> 2 </Fragment>\n    <Fragment order={22}> 3 </Fragment>\n    <Fragment order={23}> 4 </Fragment>\n    <Fragment order={24}> 5 </Fragment>\n    {/* It's easy to extend this list */)}\n    <Fragment order={41}> 6 </Fragment>\n    {/* Items can appear at the same time */)}\n    <Fragment order={42}> 7 </Fragment>\n    <Fragment order={42}> 7 </Fragment>\n    {/* This is the first fragment */)}\n    <Fragment order={1}> 1 </Fragment>\n    {/* This fragment is already active */)}\n    <Fragment order={0}> 0 </Fragment>\n  </Slide>\n)\n```\n\n### Nested Fragments\n\nFragments can be nested in each other.\n\n> Pro Tip: A nested fragment can be activated before its parent.\n> This allows very complex behavior\n\n```jsx\nimport React from 'react'\nimport Slide from '@dekk/slide'\nimport Fragment from '@dekk/fragment'\n\nexport default (\n  <Slide>\n    <Fragment order={1}> 1 </Fragment>\n    {/* The next 2 fragments are activated in order 2, 3 (parent, child) */}\n    <Fragment order={2}> 2\n      <Fragment order={3}> 3 </Fragment>\n    </Fragment>\n    {/* The next 2 fragments are activated in order 4, 5 (child, parent) */}\n    <Fragment order={5}> 5\n      <Fragment order={4}> 4 </Fragment>\n    </Fragment>\n  </Slide>\n)\n```\n\n\n### Fragment root\n\nYou can use fragment roots to ensure that parent fragments are activated before their children.\n\n**How does it behave under the hood?**  \n\nIn a fragment root with the order `4`, a nested fragment with the\norder `5` is now handled as `9` (`5 + 4`)\n\n**Resulting order**\n\n```\n1       1 -> 1\n5 ╸╸┓   5 -> 2\n6   ╻   6 -> 3\n1 + 5 = 6 -> 3\n7   ╹   7 -> 4\n4 + 5 = 9 -> 5\n```\n\n**Code**\n\n```jsx\nimport React from 'react'\nimport Slide from '@dekk/slide'\nimport Fragment from '@dekk/fragment'\n\nexport default (\n  <Slide>\n    <Fragment order={1}> 1 </Fragment>\n    {/* The next 2 fragments are activated in order 6, 7 (child, parent)\n      * The parent is activated at the same time as the first child of the next\n      * fragment block (5 + 1 = 6) is activated.\n      * The parent and child are activated before the last child of the next\n      * fragment block (5 + 4 = 9) is activated.\n      */}\n    <Fragment order={7}> 7\n      <Fragment order={6}> 6 </Fragment>\n    </Fragment>\n    {/* The next 2 fragments are activated in order 5, 1, 4 (parent, child, child) */}\n    <Fragment order={5} root> 5\n      <Fragment order={1}> 1 + 5 = 6 </Fragment>\n      {/* This fragment is last in the list */}\n      <Fragment order={4}> 4 + 5 = 9 </Fragment>\n    </Fragment>\n  </Slide>\n)\n```\n\n\n## Adding Config\n\nTo configure your Deck you can use the Config component. This allows you\nto choose the type of URLs Dekk writes or add listeners as well as disable\npaging\n\n### Default values\n\n* `paging`: `true`\n* `url`: `undefined`\n* `listeners`: `undefined`\n\n```jsx\nimport React from 'react'\nimport Deck, {Config} from '@dekk/deck'\nimport Slide from '@dekk/slide'\n\nconst listeners = {\n  onPage: page => {\n    console.log(page)\n  },\n  onFragment: (page, fragmentIndex, fragmentOrder) => {\n    console.log(page, fragmentIndex, fragmentOrder) // eg. 0 1 12\n  } \n}\n\nexport default (\n  <Deck>\n    <Config paging={false} url='hash' listeners={listeners}/>\n    <Slide> 1 </Slide>\n    <Slide> 2 </Slide>\n    <Slide> 3 </Slide>\n  </Deck>\n)\n```\n\n### Adding listeners\n\n* `onPage(page: number)`\n* `onFragment(page: number, fragmentIndex: number, fragmentOrder: number)`\n\n```jsx\nimport React from 'react'\nimport Deck, {Config} from '@dekk/deck'\nimport Slide from '@dekk/slide'\n\nconst listeners = {\n  onPage(page) {\n    console.log(page)\n  },\n  onFragment(page, fragmentIndex, fragmentOrder) {\n    console.log(page, fragmentIndex, fragmentOrder)\n  } \n}\n\nexport default (\n  <Deck>\n    <Config listeners={listeners}/>\n    <Slide> 1 </Slide>\n    <Slide> 2 </Slide>\n    <Slide> 3 </Slide>\n  </Deck>\n)\n```\n\n### Adding URLs\n\n```jsx\nimport React from 'react'\nimport Deck, {Config} from '@dekk/deck'\nimport Slide from '@dekk/slide'\n\nexport default (\n  <Deck>\n    <Config url='hash'/>\n    <Slide> 1 </Slide>\n    <Slide> 2 </Slide>\n    <Slide> 3 </Slide>\n  </Deck>\n)\n```\n\n### Disable paging\n\n```jsx\nimport React from 'react'\nimport Deck, {Config} from '@dekk/deck'\nimport Slide from '@dekk/slide'\n\nexport default (\n  <Deck>\n    <Config paging={false}/>\n    <Slide> 1 </Slide>\n    <Slide> 2 </Slide>\n    <Slide> 3 </Slide>\n  </Deck>\n)\n```\n\n## Master slides\nThis section will guide you through the options and explain how master slides work.\n\n### Creating master slides\n\nTo create a Slide with the same layout and style you can define a Master slide.\n\n```jsx\nimport React from 'react'\nimport createMaster, {Master, Slot} from '@dekk/master'\n\nexport default createMaster(\n  <Master>\n    <Slot name='Content'/>\n  </Master>\n)\n```\n\n### Adding Slots\n\nIf you want different sections in your slide you can simply add more slots.\n\n```jsx\nimport React from 'react'\nimport createMaster, {Master, Slot} from '@dekk/master'\n\nexport default createMaster(\n  <Master>\n    <Slot name='Left'/>\n    <Slot name='Right'/>\n  </Master>\n)\n```\n\n### Content types\n\nA slot can be configured to only allow certain components.\nComponents can be allowed or forbidden.\n\n```jsx\nimport React from 'react'\nimport createMaster, {Master, Slot} from '@dekk/master'\nimport Image from '@dekk/image'\n\nexport default createMaster(\n  <Master>\n    <Slot name='Left' only={[Image]}/>\n    <Slot name='Right' not={[Image]}/>\n  </Master>\n)\n```\n\n### Static Slots\n\nIn some cases you might want a slot to always appear without having to add it to every slide.\nYou can add static slots to allow this feature.\n\nUsecases:\n  * Header / Footer\n  * Navigation elements / Page number\n\n```jsx\nimport React from 'react'\nimport createMaster, {Master, Static, Slot} from '@dekk/master'\nimport Image from '@dekk/image'\n\nimport Footer from './path/to/custom/footer.js'\n\nexport default createMaster(\n  <Master>\n    <Static name=\"Footer\"><Footer/></Static>\n    <Slot name='Content'/>\n  </Master>\n)\n```\n\n### Adding Styles\n\nDekk uses styled-components under the hood.\nIt is recommended to follow this concept to style your slides.\n\nThe example below uses css-grid to create a custom layout.\n\n```jsx\nimport React from 'react'\nimport createMaster, {Master, Static, Slot} from '@dekk/master'\nimport Image from '@dekk/image'\nimport styled from 'styled-components'\n\nimport Footer from './path/to/custom/footer.js'\n\nconst MasterSlide = createMaster(\n  <Master>\n    <Static name=\"Footer\"><Footer/></Static>\n    <Slot name='Content'/>\n  </Master>\n)\n\nexport default MasterSlide\n\nexport const Slide = styled(MasterSlide)`\n  display: grid;\n  grid-template-columns: 100%;\n  grid-template-rows: calc(100% - 2rem) 2rem;\n  grid-template-areas:\n    \"Content\"\n    \"Footer\";\n\n  [data-slot],\n  [data-static] {\n    height: 100%;\n    width: 100%;\n  }\n  [data-static=\"Footer\"] {\n    grid-area: Footer;\n  }\n  [data-slot=\"Content\"] {\n    grid-area: Content;\n  }\n`\n```\n",
    "static": true,
    "access": "public"
  },
  {
    "kind": "manual",
    "longname": "/Users/greada/Documents/workspace/s2/dekk/.manual/configuration.md",
    "name": "./.manual/configuration.md",
    "content": "# Configuration\n",
    "static": true,
    "access": "public"
  },
  {
    "kind": "manual",
    "longname": "/Users/greada/Documents/workspace/s2/dekk/.manual/examples.md",
    "name": "./.manual/examples.md",
    "content": "# Examples\n",
    "static": true,
    "access": "public"
  },
  {
    "kind": "manual",
    "longname": "/Users/greada/Documents/workspace/s2/dekk/.manual/advanced.md",
    "name": "./.manual/advanced.md",
    "content": "# Advanced usage\n",
    "static": true,
    "access": "public"
  },
  {
    "kind": "manual",
    "longname": "/Users/greada/Documents/workspace/s2/dekk/CHANGELOG.md",
    "name": "./CHANGELOG.md",
    "content": "# Change Log\n\nAll notable changes to this project will be documented in this file.\nSee [Conventional Commits](https://conventionalcommits.org) for commit guidelines.\n\n<a name=\"1.0.0-4\"></a>\n# [1.0.0-4](https://github.com/sinnerschrader/dekk/compare/v1.0.0-3...v1.0.0-4) (2018-02-18)\n\n\n### Features\n\n* **url:** allow query instead of hash ([10eb97a](https://github.com/sinnerschrader/dekk/commit/10eb97a))\n\n\n\n\n<a name=\"1.0.0-0\"></a>\n# 1.0.0-0 (2018-02-17)\n\n### Bug Fixes\n\n* add dependencies ([478b424](https://github.com/sinnerschrader/dekk/commit/478b424))\n\n<a name=\"0.1.0-beta.5cbe4f15\"></a>\n# 0.1.0-beta.5cbe4f15 (2018-02-17)\n\n### Bug Fixes\n\n* fixes issues after refactor ([1e061ea](https://github.com/sinnerschrader/dekk/commit/1e061ea))\n* fixes random issues ([6ac2fb2](https://github.com/sinnerschrader/dekk/commit/6ac2fb2))\n\n\n### Features\n\n* Demo app ([d0c082d](https://github.com/sinnerschrader/dekk/commit/d0c082d))\n* **dekk:** basic prototype ([b235783](https://github.com/sinnerschrader/dekk/commit/b235783))\n* **dekk:** basic prototype demo ([2afb92b](https://github.com/sinnerschrader/dekk/commit/2afb92b))\n* **fragment:** nested fragments are hosted or flattened ([e68cba7](https://github.com/sinnerschrader/dekk/commit/e68cba7))\n* **web-app:** added wrapper ([5c014cc](https://github.com/sinnerschrader/dekk/commit/5c014cc))\n",
    "static": true,
    "access": "public"
  }
]